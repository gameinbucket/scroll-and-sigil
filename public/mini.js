const HalfPi=.5*Math.PI,QuarterPi=.25*Math.PI,Tau=2*Math.PI,RadToDeg=180/Math.PI,DegToRad=Math.PI/180;class Network{static Request(e){return new Promise(function(t,i){var s=new XMLHttpRequest;s.open("GET",e),s.onreadystatechange=function(){s.readyState===XMLHttpRequest.DONE&&t(s.responseText)},s.onerror=i,s.send()})}static Send(e,t){return new Promise(function(i,s){const r=new XMLHttpRequest;r.open("POST",e),r.onreadystatechange=function(){r.readyState===XMLHttpRequest.DONE&&i(r.responseText)},r.onerror=s,r.send(t)})}static Socket(e){return new Promise(function(t,i){let s=new WebSocket(e);s.onopen=function(){t(s)},s.onerror=function(e){i(e)}})}}MATRIX_TEMP=[],MATRIX_COPIED=[];class Matrix{static Identity(e){e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}static Orthographic(e,t,i,s,r,o,n){e[0]=2/(i-t),e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=2/(r-s),e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=-2/(n-o),e[11]=0,e[12]=-(i+t)/(i-t),e[13]=-(r+s)/(r-s),e[14]=-(n+o)/(n-o),e[15]=1}static Perspective(e,t,i,s,r){let o=i*Math.tan(t*Math.PI/360),n=-o,a=n*r,l=o*r;Matrix.Frustum(e,a,l,n,o,i,s)}static Frustum(e,t,i,s,r,o,n){e[0]=2*o/(i-t),e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=2*o/(r-s),e[6]=0,e[7]=0,e[8]=(i+t)/(i-t),e[9]=(r+s)/(r-s),e[10]=-(n+o)/(n-o),e[11]=-1,e[12]=0,e[13]=0,e[14]=-2*n*o/(n-o),e[15]=0}static Translate(e,t,i,s){e[12]=t*e[0]+i*e[4]+s*e[8]+e[12],e[13]=t*e[1]+i*e[5]+s*e[9]+e[13],e[14]=t*e[2]+i*e[6]+s*e[10]+e[14],e[15]=t*e[3]+i*e[7]+s*e[11]+e[15]}static TranslateFromView(e,t,i,s,r){e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=i*t[0]+s*t[4]+r*t[8]+t[12],e[13]=i*t[1]+s*t[5]+r*t[9]+t[13],e[14]=i*t[2]+s*t[6]+r*t[10]+t[14],e[15]=i*t[3]+s*t[7]+r*t[11]+t[15]}static RotateX(e,t){let i=Math.cos(t),s=Math.sin(t);MATRIX_TEMP[0]=1,MATRIX_TEMP[1]=0,MATRIX_TEMP[2]=0,MATRIX_TEMP[3]=0,MATRIX_TEMP[4]=0,MATRIX_TEMP[5]=i,MATRIX_TEMP[6]=s,MATRIX_TEMP[7]=0,MATRIX_TEMP[8]=0,MATRIX_TEMP[9]=-s,MATRIX_TEMP[10]=i,MATRIX_TEMP[11]=0,MATRIX_TEMP[12]=0,MATRIX_TEMP[13]=0,MATRIX_TEMP[14]=0,MATRIX_TEMP[15]=1;for(let t=0;t<16;t++)MATRIX_COPIED[t]=e[t];Matrix.Multiply(e,MATRIX_COPIED,MATRIX_TEMP)}static RotateY(e,t){let i=Math.cos(t),s=Math.sin(t);MATRIX_TEMP[0]=i,MATRIX_TEMP[1]=0,MATRIX_TEMP[2]=-s,MATRIX_TEMP[3]=0,MATRIX_TEMP[4]=0,MATRIX_TEMP[5]=1,MATRIX_TEMP[6]=0,MATRIX_TEMP[7]=0,MATRIX_TEMP[8]=s,MATRIX_TEMP[9]=0,MATRIX_TEMP[10]=i,MATRIX_TEMP[11]=0,MATRIX_TEMP[12]=0,MATRIX_TEMP[13]=0,MATRIX_TEMP[14]=0,MATRIX_TEMP[15]=1;for(let t=0;t<16;t++)MATRIX_COPIED[t]=e[t];Matrix.Multiply(e,MATRIX_COPIED,MATRIX_TEMP)}static RotateZ(e,t){let i=Math.cos(t),s=Math.sin(t);MATRIX_TEMP[0]=i,MATRIX_TEMP[1]=s,MATRIX_TEMP[2]=0,MATRIX_TEMP[3]=0,MATRIX_TEMP[4]=-s,MATRIX_TEMP[5]=i,MATRIX_TEMP[6]=0,MATRIX_TEMP[7]=0,MATRIX_TEMP[8]=0,MATRIX_TEMP[9]=0,MATRIX_TEMP[10]=1,MATRIX_TEMP[11]=0,MATRIX_TEMP[12]=0,MATRIX_TEMP[13]=0,MATRIX_TEMP[14]=0,MATRIX_TEMP[15]=1;for(let t=0;t<16;t++)MATRIX_COPIED[t]=e[t];Matrix.Multiply(e,MATRIX_COPIED,MATRIX_TEMP)}static Multiply(e,t,i){e[0]=t[0]*i[0]+t[4]*i[1]+t[8]*i[2]+t[12]*i[3],e[1]=t[1]*i[0]+t[5]*i[1]+t[9]*i[2]+t[13]*i[3],e[2]=t[2]*i[0]+t[6]*i[1]+t[10]*i[2]+t[14]*i[3],e[3]=t[3]*i[0]+t[7]*i[1]+t[11]*i[2]+t[15]*i[3],e[4]=t[0]*i[4]+t[4]*i[5]+t[8]*i[6]+t[12]*i[7],e[5]=t[1]*i[4]+t[5]*i[5]+t[9]*i[6]+t[13]*i[7],e[6]=t[2]*i[4]+t[6]*i[5]+t[10]*i[6]+t[14]*i[7],e[7]=t[3]*i[4]+t[7]*i[5]+t[11]*i[6]+t[15]*i[7],e[8]=t[0]*i[8]+t[4]*i[9]+t[8]*i[10]+t[12]*i[11],e[9]=t[1]*i[8]+t[5]*i[9]+t[9]*i[10]+t[13]*i[11],e[10]=t[2]*i[8]+t[6]*i[9]+t[10]*i[10]+t[14]*i[11],e[11]=t[3]*i[8]+t[7]*i[9]+t[11]*i[10]+t[15]*i[11],e[12]=t[0]*i[12]+t[4]*i[13]+t[8]*i[14]+t[12]*i[15],e[13]=t[1]*i[12]+t[5]*i[13]+t[9]*i[14]+t[13]*i[15],e[14]=t[2]*i[12]+t[6]*i[13]+t[10]*i[14]+t[14]*i[15],e[15]=t[3]*i[12]+t[7]*i[13]+t[11]*i[14]+t[15]*i[15]}static Inverse(e,t){for(let e=0;e<4;e++)MATRIX_COPIED[e+0]=t[4*e+0],MATRIX_COPIED[e+4]=t[4*e+1],MATRIX_COPIED[e+8]=t[4*e+2],MATRIX_COPIED[e+12]=t[4*e+3];MATRIX_TEMP[0]=MATRIX_COPIED[10]*MATRIX_COPIED[15],MATRIX_TEMP[1]=MATRIX_COPIED[11]*MATRIX_COPIED[14],MATRIX_TEMP[2]=MATRIX_COPIED[9]*MATRIX_COPIED[15],MATRIX_TEMP[3]=MATRIX_COPIED[11]*MATRIX_COPIED[13],MATRIX_TEMP[4]=MATRIX_COPIED[9]*MATRIX_COPIED[14],MATRIX_TEMP[5]=MATRIX_COPIED[10]*MATRIX_COPIED[13],MATRIX_TEMP[6]=MATRIX_COPIED[8]*MATRIX_COPIED[15],MATRIX_TEMP[7]=MATRIX_COPIED[11]*MATRIX_COPIED[12],MATRIX_TEMP[8]=MATRIX_COPIED[8]*MATRIX_COPIED[14],MATRIX_TEMP[9]=MATRIX_COPIED[10]*MATRIX_COPIED[12],MATRIX_TEMP[10]=MATRIX_COPIED[8]*MATRIX_COPIED[13],MATRIX_TEMP[11]=MATRIX_COPIED[9]*MATRIX_COPIED[12],e[0]=MATRIX_TEMP[0]*MATRIX_COPIED[5]+MATRIX_TEMP[3]*MATRIX_COPIED[6]+MATRIX_TEMP[4]*MATRIX_COPIED[7],e[0]-=MATRIX_TEMP[1]*MATRIX_COPIED[5]+MATRIX_TEMP[2]*MATRIX_COPIED[6]+MATRIX_TEMP[5]*MATRIX_COPIED[7],e[1]=MATRIX_TEMP[1]*MATRIX_COPIED[4]+MATRIX_TEMP[6]*MATRIX_COPIED[6]+MATRIX_TEMP[9]*MATRIX_COPIED[7],e[1]-=MATRIX_TEMP[0]*MATRIX_COPIED[4]+MATRIX_TEMP[7]*MATRIX_COPIED[6]+MATRIX_TEMP[8]*MATRIX_COPIED[7],e[2]=MATRIX_TEMP[2]*MATRIX_COPIED[4]+MATRIX_TEMP[7]*MATRIX_COPIED[5]+MATRIX_TEMP[10]*MATRIX_COPIED[7],e[2]-=MATRIX_TEMP[3]*MATRIX_COPIED[4]+MATRIX_TEMP[6]*MATRIX_COPIED[5]+MATRIX_TEMP[11]*MATRIX_COPIED[7],e[3]=MATRIX_TEMP[5]*MATRIX_COPIED[4]+MATRIX_TEMP[8]*MATRIX_COPIED[5]+MATRIX_TEMP[11]*MATRIX_COPIED[6],e[3]-=MATRIX_TEMP[4]*MATRIX_COPIED[4]+MATRIX_TEMP[9]*MATRIX_COPIED[5]+MATRIX_TEMP[10]*MATRIX_COPIED[6],e[4]=MATRIX_TEMP[1]*MATRIX_COPIED[1]+MATRIX_TEMP[2]*MATRIX_COPIED[2]+MATRIX_TEMP[5]*MATRIX_COPIED[3],e[4]-=MATRIX_TEMP[0]*MATRIX_COPIED[1]+MATRIX_TEMP[3]*MATRIX_COPIED[2]+MATRIX_TEMP[4]*MATRIX_COPIED[3],e[5]=MATRIX_TEMP[0]*MATRIX_COPIED[0]+MATRIX_TEMP[7]*MATRIX_COPIED[2]+MATRIX_TEMP[8]*MATRIX_COPIED[3],e[5]-=MATRIX_TEMP[1]*MATRIX_COPIED[0]+MATRIX_TEMP[6]*MATRIX_COPIED[2]+MATRIX_TEMP[9]*MATRIX_COPIED[3],e[6]=MATRIX_TEMP[3]*MATRIX_COPIED[0]+MATRIX_TEMP[6]*MATRIX_COPIED[1]+MATRIX_TEMP[11]*MATRIX_COPIED[3],e[6]-=MATRIX_TEMP[2]*MATRIX_COPIED[0]+MATRIX_TEMP[7]*MATRIX_COPIED[1]+MATRIX_TEMP[10]*MATRIX_COPIED[3],e[7]=MATRIX_TEMP[4]*MATRIX_COPIED[0]+MATRIX_TEMP[9]*MATRIX_COPIED[1]+MATRIX_TEMP[10]*MATRIX_COPIED[2],e[7]-=MATRIX_TEMP[5]*MATRIX_COPIED[0]+MATRIX_TEMP[8]*MATRIX_COPIED[1]+MATRIX_TEMP[11]*MATRIX_COPIED[2],MATRIX_TEMP[0]=MATRIX_COPIED[2]*MATRIX_COPIED[7],MATRIX_TEMP[1]=MATRIX_COPIED[3]*MATRIX_COPIED[6],MATRIX_TEMP[2]=MATRIX_COPIED[1]*MATRIX_COPIED[7],MATRIX_TEMP[3]=MATRIX_COPIED[3]*MATRIX_COPIED[5],MATRIX_TEMP[4]=MATRIX_COPIED[1]*MATRIX_COPIED[6],MATRIX_TEMP[5]=MATRIX_COPIED[2]*MATRIX_COPIED[5],MATRIX_TEMP[6]=MATRIX_COPIED[0]*MATRIX_COPIED[7],MATRIX_TEMP[7]=MATRIX_COPIED[3]*MATRIX_COPIED[4],MATRIX_TEMP[8]=MATRIX_COPIED[0]*MATRIX_COPIED[6],MATRIX_TEMP[9]=MATRIX_COPIED[2]*MATRIX_COPIED[4],MATRIX_TEMP[10]=MATRIX_COPIED[0]*MATRIX_COPIED[5],MATRIX_TEMP[11]=MATRIX_COPIED[1]*MATRIX_COPIED[4],e[8]=MATRIX_TEMP[0]*MATRIX_COPIED[13]+MATRIX_TEMP[3]*MATRIX_COPIED[14]+MATRIX_TEMP[4]*MATRIX_COPIED[15],e[8]-=MATRIX_TEMP[1]*MATRIX_COPIED[13]+MATRIX_TEMP[2]*MATRIX_COPIED[14]+MATRIX_TEMP[5]*MATRIX_COPIED[15],e[9]=MATRIX_TEMP[1]*MATRIX_COPIED[12]+MATRIX_TEMP[6]*MATRIX_COPIED[14]+MATRIX_TEMP[9]*MATRIX_COPIED[15],e[9]-=MATRIX_TEMP[0]*MATRIX_COPIED[12]+MATRIX_TEMP[7]*MATRIX_COPIED[14]+MATRIX_TEMP[8]*MATRIX_COPIED[15],e[10]=MATRIX_TEMP[2]*MATRIX_COPIED[12]+MATRIX_TEMP[7]*MATRIX_COPIED[13]+MATRIX_TEMP[10]*MATRIX_COPIED[15],e[10]-=MATRIX_TEMP[3]*MATRIX_COPIED[12]+MATRIX_TEMP[6]*MATRIX_COPIED[13]+MATRIX_TEMP[11]*MATRIX_COPIED[15],e[11]=MATRIX_TEMP[5]*MATRIX_COPIED[12]+MATRIX_TEMP[8]*MATRIX_COPIED[13]+MATRIX_TEMP[11]*MATRIX_COPIED[14],e[11]-=MATRIX_TEMP[4]*MATRIX_COPIED[12]+MATRIX_TEMP[9]*MATRIX_COPIED[13]+MATRIX_TEMP[10]*MATRIX_COPIED[14],e[12]=MATRIX_TEMP[2]*MATRIX_COPIED[10]+MATRIX_TEMP[5]*MATRIX_COPIED[11]+MATRIX_TEMP[1]*MATRIX_COPIED[9],e[12]-=MATRIX_TEMP[4]*MATRIX_COPIED[11]+MATRIX_TEMP[0]*MATRIX_COPIED[9]+MATRIX_TEMP[3]*MATRIX_COPIED[10],e[13]=MATRIX_TEMP[8]*MATRIX_COPIED[11]+MATRIX_TEMP[0]*MATRIX_COPIED[8]+MATRIX_TEMP[7]*MATRIX_COPIED[10],e[13]-=MATRIX_TEMP[6]*MATRIX_COPIED[10]+MATRIX_TEMP[9]*MATRIX_COPIED[11]+MATRIX_TEMP[1]*MATRIX_COPIED[8],e[14]=MATRIX_TEMP[6]*MATRIX_COPIED[9]+MATRIX_TEMP[11]*MATRIX_COPIED[11]+MATRIX_TEMP[3]*MATRIX_COPIED[8],e[14]-=MATRIX_TEMP[10]*MATRIX_COPIED[11]+MATRIX_TEMP[2]*MATRIX_COPIED[8]+MATRIX_TEMP[7]*MATRIX_COPIED[9],e[15]=MATRIX_TEMP[10]*MATRIX_COPIED[10]+MATRIX_TEMP[4]*MATRIX_COPIED[8]+MATRIX_TEMP[9]*MATRIX_COPIED[9],e[15]-=MATRIX_TEMP[8]*MATRIX_COPIED[9]+MATRIX_TEMP[11]*MATRIX_COPIED[10]+MATRIX_TEMP[5]*MATRIX_COPIED[8];let i=1/(MATRIX_COPIED[0]*e[0]+MATRIX_COPIED[1]*e[1]+MATRIX_COPIED[2]*e[2]+MATRIX_COPIED[3]*e[3]);for(let t=0;t<16;t++)e[t]*=i}}const SpriteScale=1/64;class Sprite{constructor(e,t,i,s,r,o,n,a,l){this.atlas=e,this.width=t,this.half_width=.5*t,this.height=i,this.left=s,this.top=r,this.right=o,this.bottom=n,this.ox=a,this.oy=l}static Simple(e,t,i,s,r,o){return[e*r,t*o,(e+i)*r,(t+s)*o]}static Build(e,t,i){let s=e[0]*t,r=e[1]*i,o=(e[0]+e[2])*t,n=(e[1]+e[3])*i,a=e[2],l=e[3],h=0,_=0;return e.length>4&&(h=e[4],_=e[5]),new Sprite(e,a,l,s,r,o,n,h,_)}static Build3(e,t,i){let s=e[0]*t,r=e[1]*i,o=(e[0]+e[2])*t,n=(e[1]+e[3])*i,a=e[2]*SpriteScale,l=e[3]*SpriteScale,h=0,_=0;return e.length>4&&(h=e[4]*SpriteScale,_=e[5]*SpriteScale),new Sprite(e,a,l,s,r,o,n,h,_)}static Copy(e,t,i){return new Sprite(e.atlas,e.width,e.height,e.left,e.top,e.right,e.bottom,t,i)}}class RenderSystem{constructor(){this.v=[],this.mv=[],this.mvp=[],this.ip=[],this.iv=[],this.program,this.program_name,this.mvp_location={},this.texture_location={},this.shaders={},this.textures={}}set_texture(e,t){e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.textures[t]),e.uniform1i(this.texture_location[this.program_name],0)}set_texture_direct(e,t){e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,t),e.uniform1i(this.texture_location[this.program_name],0)}set_program(e,t){this.program=this.shaders[t],this.program_name=t,e.useProgram(this.program)}static SetFrameBuffer(e,t){e.bindFramebuffer(e.FRAMEBUFFER,t)}static SetView(e,t,i,s,r){e.viewport(t,i,s,r),e.scissor(t,i,s,r)}static BindVao(e,t){e.bindVertexArray(t.vao)}static UpdateVao(e,t){e.bindVertexArray(t.vao),e.bindBuffer(e.ARRAY_BUFFER,t.vbo),e.bufferData(e.ARRAY_BUFFER,t.vertices,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.ebo),e.bufferData(e.ELEMENT_ARRAY_BUFFER,t.indices,e.STATIC_DRAW)}static BindAndDraw(e,t){e.bindVertexArray(t.vao),e.drawElements(e.TRIANGLES,t.index_pos,e.UNSIGNED_INT,0)}static DrawRange(e,t,i){e.drawElements(e.TRIANGLES,i,e.UNSIGNED_INT,t)}static UpdateAndDraw(e,t){0!=t.vertex_pos&&(e.bindVertexArray(t.vao),e.bindBuffer(e.ARRAY_BUFFER,t.vbo),e.bufferData(e.ARRAY_BUFFER,t.vertices,e.DYNAMIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.ebo),e.bufferData(e.ELEMENT_ARRAY_BUFFER,t.indices,e.DYNAMIC_DRAW),e.drawElements(e.TRIANGLES,t.index_pos,e.UNSIGNED_INT,0))}set_orthographic(e,t,i){Matrix.Identity(this.mv),Matrix.Translate(this.mv,t,i,-1),Matrix.Multiply(this.mvp,e,this.mv)}set_perspective(e,t,i,s,r,o){Matrix.Identity(this.v),Matrix.RotateX(this.v,r),Matrix.RotateY(this.v,o),Matrix.TranslateFromView(this.mv,this.v,t,i,s),Matrix.Multiply(this.mvp,e,this.mv)}update_mvp(e){e.uniformMatrix4fv(this.mvp_location[this.program_name],!1,this.mvp)}static MakeVao(e,t,i,s,r){t.vao=e.createVertexArray(),t.vbo=e.createBuffer(),t.ebo=e.createBuffer(),e.bindVertexArray(t.vao),e.bindBuffer(e.ARRAY_BUFFER,t.vbo),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.ebo);let o=4*(i+s+r),n=0,a=0;i>0&&(e.vertexAttribPointer(n,i,e.FLOAT,!1,o,a),e.enableVertexAttribArray(n),n++,a+=4*i),s>0&&(e.vertexAttribPointer(n,s,e.FLOAT,!1,o,a),e.enableVertexAttribArray(n),n++,a+=4*s),r>0&&(e.vertexAttribPointer(n,r,e.FLOAT,!1,o,a),e.enableVertexAttribArray(n))}static UpdateFrameBuffer(e,t){for(let i=0;i<t.format.length;i++)e.bindTexture(e.TEXTURE_2D,t.textures[i]),e.texImage2D(e.TEXTURE_2D,0,t.internalFormat[i],t.width,t.height,0,t.format[i],t.type[i],null);t.depth&&(e.bindTexture(e.TEXTURE_2D,t.depth_texture),e.texImage2D(e.TEXTURE_2D,0,e.DEPTH24_STENCIL8,t.width,t.height,0,e.DEPTH_STENCIL,e.UNSIGNED_INT_24_8,null))}static TextureFrameBuffer(e,t){for(let i=0;i<t.format.length;i++)t.textures[i]=e.createTexture(),e.bindTexture(e.TEXTURE_2D,t.textures[i]),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),t.linear?(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR)):(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST)),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+i,e.TEXTURE_2D,t.textures[i],0),t.draw_buffers[i]=e.COLOR_ATTACHMENT0+i;e.drawBuffers(t.draw_buffers),t.depth&&(t.depth_texture=e.createTexture(),e.bindTexture(e.TEXTURE_2D,t.depth_texture),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,t.depth_texture,0)),RenderSystem.UpdateFrameBuffer(e,t)}static MakeFrameBuffer(e,t){t.fbo=e.createFramebuffer(),e.bindFramebuffer(e.FRAMEBUFFER,t.fbo),RenderSystem.TextureFrameBuffer(e,t),e.checkFramebufferStatus(e.FRAMEBUFFER)!==e.FRAMEBUFFER_COMPLETE&&console.error("framebuffer error")}async make_program(e,t){let i=(await Network.Request("shaders/"+t)).split("==========================================================="),s=i[0],r=i[1].trim(),o=RenderSystem.CompileProgram(e,s,r);this.shaders[t]=o,this.mvp_location[t]=e.getUniformLocation(o,"u_mvp"),this.texture_location[t]=e.getUniformLocation(o,"u_texture0")}async make_image(e,t,i){let s=e.createTexture();s.image=new Image,s.image.src="images/"+t+".png",await new Promise(function(e){s.image.onload=e}),e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,s.image),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,i),e.bindTexture(e.TEXTURE_2D,null),this.textures[t]=s}static CompileProgram(e,t,i){let s=RenderSystem.CompileShader(e,t,e.VERTEX_SHADER),r=RenderSystem.CompileShader(e,i,e.FRAGMENT_SHADER),o=e.createProgram();return e.attachShader(o,s),e.attachShader(o,r),e.linkProgram(o),e.getProgramParameter(o,e.LINK_STATUS)||(console.error(t+", "+i),console.error(e.getProgramInfoLog(o))),o}static CompileShader(e,t,i){let s=e.createShader(i);return e.shaderSource(s,t),e.compileShader(s),e.getShaderParameter(s,e.COMPILE_STATUS)||(console.error(t),console.error(e.getShaderInfoLog(s))),s}}class RenderBuffer{constructor(){this.position,this.color,this.texture,this.vao,this.vbo,this.ebo,this.vertex_pos,this.index_pos,this.index_offset,this.vertices,this.indices}static Init(e,t,i,s,r,o){let n=new RenderBuffer;return n.position=t,n.color=i,n.texture=s,n.vertex_pos=0,n.index_pos=0,n.index_offset=0,n.vertices=new Float32Array(r*(t+i+s)),n.indices=new Uint32Array(o),RenderSystem.MakeVao(e,n,t,i,s),n}static InitCopy(e,t){let i=new RenderBuffer;return i.vertices=new Float32Array(t.vertex_pos),i.indices=new Uint32Array(t.index_pos),RenderBuffer.Copy(t,i),RenderSystem.MakeVao(e,i,t.position,t.color,t.texture),RenderSystem.UpdateVao(e,i),i}static Copy(e,t){for(let i=0;i<e.vertex_pos;i++)t.vertices[i]=e.vertices[i];for(let i=0;i<e.index_pos;i++)t.indices[i]=e.indices[i];t.vertex_pos=e.vertex_pos,t.index_pos=e.index_pos,t.index_offset=e.index_offset}static Expand(e,t){let i=t.vertices,s=t.vertices;t.vertices=new Float32Array(2*t.vertices.length),t.indices=new Uint32Array(2*t.indices.length);for(let e=0;e<t.vertex_pos;e++)t.vertices[e]=i[e];for(let e=0;e<t.index_pos;e++)t.indices[e]=s[e];return RenderSystem.UpdateVao(e,t),t}Zero(){this.vertex_pos=0,this.index_pos=0,this.index_offset=0}}class RenderCopy{constructor(e,t,i,s,r){this.position=e,this.color=t,this.texture=i,this.vertex_pos,this.index_pos,this.index_offset,this.vertices=new Float32Array(s*(e+t+i)),this.indices=new Uint32Array(r)}Zero(){this.vertex_pos=0,this.index_pos=0,this.index_offset=0}}class FrameBuffer{constructor(){this.fbo,this.internalFormat,this.format,this.type,this.width,this.height,this.linear,this.depth,this.depth_texture,this.textures=[],this.draw_buffers=[]}set(e,t,i,s,r,o,n){s.length===i.length&&s.length===r.length||console.error("framebuffer invalid"),this.internalFormat=i,this.format=s,this.type=r,this.width=e,this.height=t,this.linear="linear"===o,this.depth="depth"===n}static Make(e,t,i,s,r,o,n,a){let l=new FrameBuffer;return l.set(t,i,s,r,o,n,a),RenderSystem.MakeFrameBuffer(e,l),l}static Resize(e,t,i,s){t.width=i,t.height=s,RenderSystem.SetFrameBuffer(e,t.fbo),RenderSystem.UpdateFrameBuffer(e,t)}}const INPUT_KEYS={},INPUT_MOUSE=[!1,!1],INPUT_POS=[0,0];class Input{static Is(e){return INPUT_KEYS[e]}static Off(e){INPUT_KEYS[e]=!1}static IsClick(e){return INPUT_MOUSE[e]}static MovementY(){return INPUT_MOVEMENT[1]}static Moved(){INPUT_MOVEMENT[0]=0,INPUT_MOVEMENT[1]=0}static Clicked(e){INPUT_MOUSE[e]=!1}static KeyUp(e){INPUT_KEYS[e.key]=!1}static KeyDown(e){INPUT_KEYS[e.key]=!0}static MouseUp(e){0===e.button?INPUT_MOUSE[0]=!1:2===e.button&&(INPUT_MOUSE[1]=!1)}static MouseDown(e){0===e.button?INPUT_MOUSE[0]=!0:2===e.button&&(INPUT_MOUSE[1]=!0)}static MouseMove(e){INPUT_POS[0]=e.clientX,INPUT_POS[1]=e.clientY}}const Sounds={},ImageData={},SpriteData={},SpriteAlias={},SpriteAnimations={},DirectionPrefix=["front-","front-side-","side-","back-side-","back-"];class Wad{static async Load(e,t,i){let s=Parser.read(i);console.log(s);let r=s.resources,o=s.sprites,n=s.animations,a=s.tiles,l=r.shaders,h=r.images,_=r.sounds,I=[];for(let i=0;i<l.length;i++)I.push(e.make_program(t,l[i]));for(let i=0;i<h.length;i++)I.push(e.make_image(t,h[i],t.CLAMP_TO_EDGE));await Promise.all(I);for(let e in _){let t=_[e],i=t.substring(0,t.lastIndexOf("."));Sounds[i]=new Audio("sounds/"+t)}for(let t in o){let i=o[t],s=e.textures[t],r=1/s.image.width,n=1/s.image.height;ImageData[t]={},SpriteData[t]={};for(let e in i){let s=i[e],o=[];for(let e in s)o.push(parseInt(s[e]));ImageData[t][e]=Sprite.Build(o,r,n),SpriteData[t][e]=Sprite.Build3(o,r,n)}}for(let e in n){let t=n[e],i=t.animations,s="alias"in t?t.alias:null;SpriteAlias[e]={},SpriteAnimations[e]={};for(let t in i)SpriteAnimations[e][t]=i[t];if(null!=s)for(let t in s)SpriteAlias[e][t]=s[t]}TileTexture.push(null),TileClosed.push(!1);let c=o.tiles,T=e.textures.tiles,M=1/T.image.width,d=1/T.image.height;for(let e in c){let t=c[e],i=parseInt(t[0]),s=parseInt(t[1]),r=parseInt(t[2]),o=parseInt(t[3]);TileTexture.push(Sprite.Simple(i,s,r,o,M,d)),TileClosed.push("true"===a[e].closed)}Wad.SpriteBuilderDirectional("baron",BaronAnimationIdle,"idle"),Wad.SpriteBuilderDirectional("baron",BaronAnimationWalk,"walk"),Wad.SpriteBuilderDirectional("baron",BaronAnimationMelee,"melee"),Wad.SpriteBuilderDirectional("baron",BaronAnimationMissile,"missile"),Wad.SpriteBuilderDirectional("baron",BaronAnimationDeath,"death"),HumanAnimationIdle.push.apply(HumanAnimationIdle,BaronAnimationIdle),HumanAnimationWalk.push.apply(HumanAnimationWalk,BaronAnimationWalk),HumanAnimationMelee.push.apply(HumanAnimationMelee,BaronAnimationMelee),HumanAnimationMissile.push.apply(HumanAnimationMissile,BaronAnimationMissile),HumanAnimationDeath.push.apply(HumanAnimationDeath,BaronAnimationDeath),Wad.SpriteBuilder("particles",PlasmaExplosionAnimation,"plasma-explosion")}static SpriteBuilder(e,t,i){let s=[],r=SpriteAnimations[e][i];for(let t in r){let i=r[t];s.push(SpriteData[e][i])}t.push.apply(t,s)}static SpriteBuilderDirectional(e,t,i){let s=[],r=SpriteAnimations[e][i];for(let t in r){let i=r[t],o=new Array(5);for(let t in DirectionPrefix){let s=DirectionPrefix[t]+i,r=SpriteData[e]["front-"+i];s in SpriteData[e]&&(r=SpriteData[e][s]),o[t]=r}s.push(o)}t.push.apply(t,s)}}class Camera{constructor(e,t,i,s){this.thing=e,this.radius=t,this.x=0,this.y=0,this.z=0,this.rx=i,this.ry=s,this.update()}update(){Input.Is("ArrowLeft")&&(this.ry-=.05,this.ry<0&&(this.ry+=Tau)),Input.Is("ArrowRight")&&(this.ry+=.05,this.ry>=Tau&&(this.ry-=Tau)),this.rx>-.25&&Input.Is("ArrowUp")&&(this.rx-=.05),this.rx<.25&&Input.Is("ArrowDown")&&(this.rx+=.05);let e=Math.sin(this.rx),t=Math.cos(this.rx),i=Math.sin(this.ry),s=Math.cos(this.ry),r=this.thing;this.x=r.X-this.radius*t*i,this.y=r.Y+this.radius*e,this.z=r.Z+this.radius*t*s,this.y+=r.Height}}const LIGHT_QUEUE_LIMIT=27e3,LIGHT_QUEUE=new Array(LIGHT_QUEUE_LIMIT),LIGHT_QUEUE_POS=0,LIGHT_QUEUE_NUM=1,LIGHT_FADE=.95;for(let e=0;e<LIGHT_QUEUE.length;e++)LIGHT_QUEUE[e]=new Int32Array(3);let LIGHT_BLOCK_X=0,LIGHT_BLOCK_Y=0,LIGHT_BLOCK_Z=0,LIGHT_POS=0,LIGHT_NUM=0;class Light{constructor(e,t,i,s){this.x=e,this.y=t,this.z=i,this.rgb=s}static Colorize(e,t){return[e[0]*t/65025,e[1]*t/65025,e[2]*t/65025]}static Visit(e,t,i,s,r,o,n){let a=e.GetTilePointer(LIGHT_BLOCK_X,LIGHT_BLOCK_Y,LIGHT_BLOCK_Z,t,i,s);if(null===a||TileClosed[a.type])return;if(a.red>=r||a.green>=o||a.blue>=n)return;a.red=r,a.green=o,a.blue=n;let l=LIGHT_POS+LIGHT_NUM;l>=LIGHT_QUEUE_LIMIT&&(l-=LIGHT_QUEUE_LIMIT),LIGHT_QUEUE[l][0]=t,LIGHT_QUEUE[l][1]=i,LIGHT_QUEUE[l][2]=s,LIGHT_NUM++}static Add(e,t,i){LIGHT_BLOCK_X=t.x,LIGHT_BLOCK_Y=t.y,LIGHT_BLOCK_Z=t.z;let s=Render.UnpackRgb(i.rgb),r=i.x+i.y*BlockSize+i.z*BLOCK_SLICE,o=t.tiles[r];for(o.red=s[0],o.green=s[1],o.blue=s[2],LIGHT_QUEUE[0][0]=i.x,LIGHT_QUEUE[0][1]=i.y,LIGHT_QUEUE[0][2]=i.z,LIGHT_POS=0,LIGHT_NUM=1;LIGHT_NUM>0;){let t=LIGHT_QUEUE[LIGHT_POS][0],i=LIGHT_QUEUE[LIGHT_POS][1],s=LIGHT_QUEUE[LIGHT_POS][2];++LIGHT_POS===LIGHT_QUEUE_LIMIT&&(LIGHT_POS=0),LIGHT_NUM--;let r=e.GetTilePointer(LIGHT_BLOCK_X,LIGHT_BLOCK_Y,LIGHT_BLOCK_Z,t,i,s);if(null===r)continue;let o=Math.floor(r.red*LIGHT_FADE),n=Math.floor(r.green*LIGHT_FADE),a=Math.floor(r.blue*LIGHT_FADE);Light.Visit(e,t-1,i,s,o,n,a),Light.Visit(e,t+1,i,s,o,n,a),Light.Visit(e,t,i-1,s,o,n,a),Light.Visit(e,t,i+1,s,o,n,a),Light.Visit(e,t,i,s-1,o,n,a),Light.Visit(e,t,i,s+1,o,n,a)}}static Remove(e,t,i,s){let r=Math.floor(t*InverseBlockSize),o=Math.floor(i*InverseBlockSize),n=Math.floor(s*InverseBlockSize),a=t%BlockSize,l=i%BlockSize,h=s%BlockSize,_=e.blocks[r+o*e.width+n*e.slice];for(let e=0;e<_.lights.length;e++){let t=_.lights[e];t.x===a&&t.y===l&&t.z===h&&_.lights.splice(e,1)}}}class Render{static Lumin(e){return.2126*e[0]+.7152*e[1]+.0722*e[2]}static PackRgb(e,t,i){return e<<16|t<<8|i}static UnpackRgb(e){return[e>>16&255,e>>8&255,255&e]}static Index4(e){e.indices[e.index_pos++]=e.index_offset,e.indices[e.index_pos++]=e.index_offset+1,e.indices[e.index_pos++]=e.index_offset+2,e.indices[e.index_pos++]=e.index_offset+2,e.indices[e.index_pos++]=e.index_offset+3,e.indices[e.index_pos++]=e.index_offset,e.index_offset+=4}static MirrorIndex4(e){e.indices[e.index_pos++]=e.index_offset+1,e.indices[e.index_pos++]=e.index_offset+2,e.indices[e.index_pos++]=e.index_offset+3,e.indices[e.index_pos++]=e.index_offset+3,e.indices[e.index_pos++]=e.index_offset,e.indices[e.index_pos++]=e.index_offset+1,e.index_offset+=4}static Image(e,t,i,s,r,o,n,a,l){e.vertices[e.vertex_pos++]=t,e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=o,e.vertices[e.vertex_pos++]=l,e.vertices[e.vertex_pos++]=t+s,e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=a,e.vertices[e.vertex_pos++]=l,e.vertices[e.vertex_pos++]=t+s,e.vertices[e.vertex_pos++]=i+r,e.vertices[e.vertex_pos++]=a,e.vertices[e.vertex_pos++]=n,e.vertices[e.vertex_pos++]=t,e.vertices[e.vertex_pos++]=i+r,e.vertices[e.vertex_pos++]=o,e.vertices[e.vertex_pos++]=n,Render.Index4(e)}static Rectangle(e,t,i,s,r,o,n,a){e.vertices[e.vertex_pos++]=t,e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=o,e.vertices[e.vertex_pos++]=n,e.vertices[e.vertex_pos++]=a,e.vertices[e.vertex_pos++]=t+s,e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=o,e.vertices[e.vertex_pos++]=n,e.vertices[e.vertex_pos++]=a,e.vertices[e.vertex_pos++]=t+s,e.vertices[e.vertex_pos++]=i+r,e.vertices[e.vertex_pos++]=o,e.vertices[e.vertex_pos++]=n,e.vertices[e.vertex_pos++]=a,e.vertices[e.vertex_pos++]=t,e.vertices[e.vertex_pos++]=i+r,e.vertices[e.vertex_pos++]=o,e.vertices[e.vertex_pos++]=n,e.vertices[e.vertex_pos++]=a,Render.Index4(e)}static Circle(e,t,i,s,r,o,n){const a=2*Math.PI,l=a/32;let h=e.index_offset;e.vertices[e.vertex_pos++]=t,e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=o,e.vertices[e.vertex_pos++]=n,e.index_offset++;let _=0;for(;_<a;)e.vertices[e.vertex_pos++]=t+Math.cos(_)*s,e.vertices[e.vertex_pos++]=i+Math.sin(_)*s,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=o,e.vertices[e.vertex_pos++]=n,e.indices[e.index_pos++]=h,e.indices[e.index_pos++]=e.index_offset,e.indices[e.index_pos++]=e.index_offset+1,e.index_offset++,_+=l;e.indices[e.index_pos-1]=h+1}}class Render3{static Sprite(e,t,i,s,r,o,n){let a=n.half_width*r,l=n.half_width*o;e.vertices[e.vertex_pos++]=t-l,e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s+a,e.vertices[e.vertex_pos++]=n.left,e.vertices[e.vertex_pos++]=n.bottom,e.vertices[e.vertex_pos++]=t+l,e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s-a,e.vertices[e.vertex_pos++]=n.right,e.vertices[e.vertex_pos++]=n.bottom,e.vertices[e.vertex_pos++]=t+l,e.vertices[e.vertex_pos++]=i+n.height,e.vertices[e.vertex_pos++]=s-a,e.vertices[e.vertex_pos++]=n.right,e.vertices[e.vertex_pos++]=n.top,e.vertices[e.vertex_pos++]=t-l,e.vertices[e.vertex_pos++]=i+n.height,e.vertices[e.vertex_pos++]=s+a,e.vertices[e.vertex_pos++]=n.left,e.vertices[e.vertex_pos++]=n.top,Render.Index4(e)}static MirrorSprite(e,t,i,s,r,o,n){let a=n.half_width*r,l=n.half_width*o;e.vertices[e.vertex_pos++]=t-l,e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s+a,e.vertices[e.vertex_pos++]=n.right,e.vertices[e.vertex_pos++]=n.bottom,e.vertices[e.vertex_pos++]=t+l,e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s-a,e.vertices[e.vertex_pos++]=n.left,e.vertices[e.vertex_pos++]=n.bottom,e.vertices[e.vertex_pos++]=t+l,e.vertices[e.vertex_pos++]=i+n.height,e.vertices[e.vertex_pos++]=s-a,e.vertices[e.vertex_pos++]=n.left,e.vertices[e.vertex_pos++]=n.top,e.vertices[e.vertex_pos++]=t-l,e.vertices[e.vertex_pos++]=i+n.height,e.vertices[e.vertex_pos++]=s+a,e.vertices[e.vertex_pos++]=n.right,e.vertices[e.vertex_pos++]=n.top,Render.Index4(e)}static Sprite3(e,t,i,s,r,o){let n=r[0],a=r[4],l=r[8],h=r[1],_=r[5],I=r[9],c=n*o.width+h*o.height,T=a*o.width+_*o.height,M=l*o.width+I*o.height,d=n*o.width-h*o.height,v=a*o.width-_*o.height,p=l*o.width-I*o.height;e.vertices[e.vertex_pos++]=t-d,e.vertices[e.vertex_pos++]=i-v,e.vertices[e.vertex_pos++]=s-p,e.vertices[e.vertex_pos++]=o.left,e.vertices[e.vertex_pos++]=o.top,e.vertices[e.vertex_pos++]=t-c,e.vertices[e.vertex_pos++]=i-T,e.vertices[e.vertex_pos++]=s-M,e.vertices[e.vertex_pos++]=o.left,e.vertices[e.vertex_pos++]=o.bottom,e.vertices[e.vertex_pos++]=t+d,e.vertices[e.vertex_pos++]=i+v,e.vertices[e.vertex_pos++]=s+p,e.vertices[e.vertex_pos++]=o.right,e.vertices[e.vertex_pos++]=o.bottom,e.vertices[e.vertex_pos++]=t+c,e.vertices[e.vertex_pos++]=i+T,e.vertices[e.vertex_pos++]=s+M,e.vertices[e.vertex_pos++]=o.right,e.vertices[e.vertex_pos++]=o.top,Render.Index4(e)}}class RenderTile{static Side(e,t,i,s,r,o,n,a,l,h){switch(t){case WorldPositiveX:e.vertices[e.vertex_pos++]=i+1,e.vertices[e.vertex_pos++]=s,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=n[0],e.vertices[e.vertex_pos++]=n[1],e.vertices[e.vertex_pos++]=n[2],e.vertices[e.vertex_pos++]=o[0],e.vertices[e.vertex_pos++]=o[1],e.vertices[e.vertex_pos++]=i+1,e.vertices[e.vertex_pos++]=s+1,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=a[0],e.vertices[e.vertex_pos++]=a[1],e.vertices[e.vertex_pos++]=a[2],e.vertices[e.vertex_pos++]=o[2],e.vertices[e.vertex_pos++]=o[1],e.vertices[e.vertex_pos++]=i+1,e.vertices[e.vertex_pos++]=s+1,e.vertices[e.vertex_pos++]=r+1,e.vertices[e.vertex_pos++]=l[0],e.vertices[e.vertex_pos++]=l[1],e.vertices[e.vertex_pos++]=l[2],e.vertices[e.vertex_pos++]=o[2],e.vertices[e.vertex_pos++]=o[3],e.vertices[e.vertex_pos++]=i+1,e.vertices[e.vertex_pos++]=s,e.vertices[e.vertex_pos++]=r+1,e.vertices[e.vertex_pos++]=h[0],e.vertices[e.vertex_pos++]=h[1],e.vertices[e.vertex_pos++]=h[2],e.vertices[e.vertex_pos++]=o[0],e.vertices[e.vertex_pos++]=o[3];break;case WorldNegativeX:e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=n[0],e.vertices[e.vertex_pos++]=n[1],e.vertices[e.vertex_pos++]=n[2],e.vertices[e.vertex_pos++]=o[0],e.vertices[e.vertex_pos++]=o[1],e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s,e.vertices[e.vertex_pos++]=r+1,e.vertices[e.vertex_pos++]=a[0],e.vertices[e.vertex_pos++]=a[1],e.vertices[e.vertex_pos++]=a[2],e.vertices[e.vertex_pos++]=o[0],e.vertices[e.vertex_pos++]=o[3],e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s+1,e.vertices[e.vertex_pos++]=r+1,e.vertices[e.vertex_pos++]=l[0],e.vertices[e.vertex_pos++]=l[1],e.vertices[e.vertex_pos++]=l[2],e.vertices[e.vertex_pos++]=o[2],e.vertices[e.vertex_pos++]=o[3],e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s+1,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=h[0],e.vertices[e.vertex_pos++]=h[1],e.vertices[e.vertex_pos++]=h[2],e.vertices[e.vertex_pos++]=o[2],e.vertices[e.vertex_pos++]=o[1];break;case WorldPositiveY:e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s+1,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=n[0],e.vertices[e.vertex_pos++]=n[1],e.vertices[e.vertex_pos++]=n[2],e.vertices[e.vertex_pos++]=o[0],e.vertices[e.vertex_pos++]=o[1],e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s+1,e.vertices[e.vertex_pos++]=r+1,e.vertices[e.vertex_pos++]=a[0],e.vertices[e.vertex_pos++]=a[1],e.vertices[e.vertex_pos++]=a[2],e.vertices[e.vertex_pos++]=o[0],e.vertices[e.vertex_pos++]=o[3],e.vertices[e.vertex_pos++]=i+1,e.vertices[e.vertex_pos++]=s+1,e.vertices[e.vertex_pos++]=r+1,e.vertices[e.vertex_pos++]=l[0],e.vertices[e.vertex_pos++]=l[1],e.vertices[e.vertex_pos++]=l[2],e.vertices[e.vertex_pos++]=o[2],e.vertices[e.vertex_pos++]=o[3],e.vertices[e.vertex_pos++]=i+1,e.vertices[e.vertex_pos++]=s+1,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=h[0],e.vertices[e.vertex_pos++]=h[1],e.vertices[e.vertex_pos++]=h[2],e.vertices[e.vertex_pos++]=o[2],e.vertices[e.vertex_pos++]=o[1];break;case WorldNegativeY:e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=n[0],e.vertices[e.vertex_pos++]=n[1],e.vertices[e.vertex_pos++]=n[2],e.vertices[e.vertex_pos++]=o[0],e.vertices[e.vertex_pos++]=o[1],e.vertices[e.vertex_pos++]=i+1,e.vertices[e.vertex_pos++]=s,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=a[0],e.vertices[e.vertex_pos++]=a[1],e.vertices[e.vertex_pos++]=a[2],e.vertices[e.vertex_pos++]=o[2],e.vertices[e.vertex_pos++]=o[1],e.vertices[e.vertex_pos++]=i+1,e.vertices[e.vertex_pos++]=s,e.vertices[e.vertex_pos++]=r+1,e.vertices[e.vertex_pos++]=l[0],e.vertices[e.vertex_pos++]=l[1],e.vertices[e.vertex_pos++]=l[2],e.vertices[e.vertex_pos++]=o[2],e.vertices[e.vertex_pos++]=o[3],e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s,e.vertices[e.vertex_pos++]=r+1,e.vertices[e.vertex_pos++]=h[0],e.vertices[e.vertex_pos++]=h[1],e.vertices[e.vertex_pos++]=h[2],e.vertices[e.vertex_pos++]=o[0],e.vertices[e.vertex_pos++]=o[3];break;case WorldPositiveZ:e.vertices[e.vertex_pos++]=i+1,e.vertices[e.vertex_pos++]=s,e.vertices[e.vertex_pos++]=r+1,e.vertices[e.vertex_pos++]=n[0],e.vertices[e.vertex_pos++]=n[1],e.vertices[e.vertex_pos++]=n[2],e.vertices[e.vertex_pos++]=o[2],e.vertices[e.vertex_pos++]=o[1],e.vertices[e.vertex_pos++]=i+1,e.vertices[e.vertex_pos++]=s+1,e.vertices[e.vertex_pos++]=r+1,e.vertices[e.vertex_pos++]=a[0],e.vertices[e.vertex_pos++]=a[1],e.vertices[e.vertex_pos++]=a[2],e.vertices[e.vertex_pos++]=o[2],e.vertices[e.vertex_pos++]=o[3],e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s+1,e.vertices[e.vertex_pos++]=r+1,e.vertices[e.vertex_pos++]=l[0],e.vertices[e.vertex_pos++]=l[1],e.vertices[e.vertex_pos++]=l[2],e.vertices[e.vertex_pos++]=o[0],e.vertices[e.vertex_pos++]=o[3],e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s,e.vertices[e.vertex_pos++]=r+1,e.vertices[e.vertex_pos++]=h[0],e.vertices[e.vertex_pos++]=h[1],e.vertices[e.vertex_pos++]=h[2],e.vertices[e.vertex_pos++]=o[0],e.vertices[e.vertex_pos++]=o[1];break;case WorldNegativeZ:e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=n[0],e.vertices[e.vertex_pos++]=n[1],e.vertices[e.vertex_pos++]=n[2],e.vertices[e.vertex_pos++]=o[0],e.vertices[e.vertex_pos++]=o[1],e.vertices[e.vertex_pos++]=i,e.vertices[e.vertex_pos++]=s+1,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=a[0],e.vertices[e.vertex_pos++]=a[1],e.vertices[e.vertex_pos++]=a[2],e.vertices[e.vertex_pos++]=o[0],e.vertices[e.vertex_pos++]=o[3],e.vertices[e.vertex_pos++]=i+1,e.vertices[e.vertex_pos++]=s+1,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=l[0],e.vertices[e.vertex_pos++]=l[1],e.vertices[e.vertex_pos++]=l[2],e.vertices[e.vertex_pos++]=o[2],e.vertices[e.vertex_pos++]=o[3],e.vertices[e.vertex_pos++]=i+1,e.vertices[e.vertex_pos++]=s,e.vertices[e.vertex_pos++]=r,e.vertices[e.vertex_pos++]=h[0],e.vertices[e.vertex_pos++]=h[1],e.vertices[e.vertex_pos++]=h[2],e.vertices[e.vertex_pos++]=o[2],e.vertices[e.vertex_pos++]=o[1]}Render.Lumin(n)+Render.Lumin(l)<Render.Lumin(a)+Render.Lumin(h)?Render.MirrorIndex4(e):Render.Index4(e)}}const Gravity=.01,AnimationRate=16,AnimationNotDone=0,AnimationAlmostDone=1,AnimationDone=2,AnimationFront=0,AnimationFrontSide=1,AnimationSide=2,AnimationBackSide=3,AnimationBack=4,DirectionNorth=0,DirectionNorthEast=1,DirectionEast=2,DirectionSouthEast=3,DirectionSouth=4,DirectionSouthWest=5,DirectionWest=6,DirectionNorthWest=7,DirectionCount=8,DirectionNone=8,DirectionToAngle=[0*DegToRad,45*DegToRad,90*DegToRad,135*DegToRad,180*DegToRad,225*DegToRad,270*DegToRad,315*DegToRad],ThingAngleA=337.5*DegToRad,ThingAngleB=292.5*DegToRad,ThingAngleC=247.5*DegToRad,ThingAngleD=202.5*DegToRad,ThingAngleE=157.5*DegToRad,ThingAngleF=112.5*DegToRad,ThingAngleG=67.5*DegToRad,ThingAngleH=22.5*DegToRad,HumanUID=0,BaronUID=1,TreeUID=2,PlasmaUID=3;class Thing{constructor(){this.World=null,this.UID=0,this.SID="",this.NID=0,this.Animation=null,this.AnimationMod=0,this.AnimationFrame=0,this.X=0,this.Y=0,this.Z=0,this.Angle=0,this.DeltaX=0,this.DeltaY=0,this.DeltaZ=0,this.OldX=0,this.OldY=0,this.OldZ=0,this.NetX=0,this.NetY=0,this.NetZ=0,this.DeltaNetX=0,this.DeltaNetY=0,this.DeltaNetZ=0,this.MinBX=0,this.MinBY=0,this.MinBZ=0,this.MaxBX=0,this.MaxBY=0,this.MaxBZ=0,this.Ground=!1,this.Radius=0,this.Height=0,this.Speed=0,this.Health=0}BlockBorders(){this.MinBX=Math.floor((this.X-this.Radius)*InverseBlockSize),this.MinBY=Math.floor(this.Y*InverseBlockSize),this.MinBZ=Math.floor((this.Z-this.Radius)*InverseBlockSize),this.MaxBX=Math.floor((this.X+this.Radius)*InverseBlockSize),this.MaxBY=Math.floor((this.Y+this.Height)*InverseBlockSize),this.MaxBZ=Math.floor((this.Z+this.Radius)*InverseBlockSize)}AddToBlocks(){for(let e=this.MinBX;e<=this.MaxBX;e++)for(let t=this.MinBY;t<=this.MaxBY;t++)for(let i=this.MinBZ;i<=this.MaxBZ;i++)this.World.GetBlock(e,t,i).AddThing(this)}RemoveFromBlocks(){for(let e=this.MinBX;e<=this.MaxBX;e++)for(let t=this.MinBY;t<=this.MaxBY;t++)for(let i=this.MinBZ;i<=this.MaxBZ;i++)this.World.GetBlock(e,t,i).RemoveThing(this)}Cleanup(){this.World.RemoveThing(this),this.RemoveFromBlocks()}UpdateAnimation(){if(this.AnimationMod++,this.AnimationMod===AnimationRate){this.AnimationMod=0,this.AnimationFrame++;let e=this.Animation.length;if(this.AnimationFrame===e-1)return AnimationAlmostDone;if(this.AnimationFrame===e)return AnimationDone}return AnimationNotDone}NetUpdateState(e){}NetUpdateHealth(e){}TerrainCollisionY(e){if(this.DeltaY<0){let t=Math.floor(this.X),i=Math.floor(this.Y),s=Math.floor(this.Z),r=Math.floor(t*InverseBlockSize),o=Math.floor(i*InverseBlockSize),n=Math.floor(s*InverseBlockSize),a=t-r*BlockSize,l=i-o*BlockSize,h=s-n*BlockSize,_=e.GetTileType(r,o,n,a,l,h);TileClosed[_]&&(this.Y=i+1,this.Ground=!0,this.DeltaY=0)}}Resolve(e){let t=this.Radius+e.Radius;Math.abs(this.X-e.X)>t||Math.abs(this.Z-e.Z)>t||(Math.abs(this.OldX-e.X)>Math.abs(this.OldZ-e.Z)?(this.OldX-e.X<0?this.X=e.X-t:this.X=e.X+t,this.DeltaX=0):(this.OldZ-e.Z<0?this.Z=e.Z-t:this.Z=e.Z+t,this.DeltaZ=0))}Overlap(e){let t=this.Radius+e.Radius;return Math.abs(this.X-e.X)<=t&&Math.abs(this.Z-e.Z)<=t}LerpNetCode(){let e=!1;this.DeltaNetX>0?(this.X+=this.DeltaNetX,e=!0,this.X>=this.NetX&&(this.X=this.NetX,this.DeltaNetX=0)):this.DeltaNetX<0&&(this.X+=this.DeltaNetX,e=!0,this.X<=this.NetX&&(this.X=this.NetX,this.DeltaNetX=0)),this.DeltaNetY>0?(this.Y+=this.DeltaNetY,e=!0,this.Y>=this.NetY&&(this.Y=this.NetY,this.DeltaNetY=0)):this.DeltaNetY<0&&(this.Y+=this.DeltaNetY,e=!0,this.Y<=this.NetY&&(this.Y=this.NetY,this.DeltaNetY=0)),this.DeltaNetZ>0?(this.Z+=this.DeltaNetZ,e=!0,this.Z>=this.NetZ&&(this.Z=this.NetZ,this.DeltaNetZ=0)):this.DeltaNetZ<0&&(this.Z+=this.DeltaNetZ,e=!0,this.Z<=this.NetZ&&(this.Z=this.NetZ,this.DeltaNetZ=0)),e&&(this.RemoveFromBlocks(),this.BlockBorders(),this.AddToBlocks())}Integrate(){}Render(e,t,i,s){let r=t-this.X,o=i-this.Z,n=Math.sqrt(r*r+o*o);r/=n,o/=n;let a,l,h=s-this.Angle;h<0&&(h+=Tau),h>ThingAngleA?(a=AnimationBack,l=!1):h>ThingAngleB?(a=AnimationBackSide,l=!0):h>ThingAngleC?(a=AnimationSide,l=!0):h>ThingAngleD?(a=AnimationFrontSide,l=!0):h>ThingAngleE?(a=AnimationFront,l=!1):h>ThingAngleF?(a=AnimationFrontSide,l=!1):h>ThingAngleG?(a=AnimationSide,l=!1):h>ThingAngleH?(a=AnimationBackSide,l=!1):(a=AnimationBack,l=!1);let _=this.Animation[this.AnimationFrame][a];l?Render3.MirrorSprite(e[this.SID],this.X,this.Y,this.Z,r,o,_):Render3.Sprite(e[this.SID],this.X,this.Y,this.Z,r,o,_)}}class Tree extends Thing{constructor(e,t,i,s,r){super(),this.World=e,this.UID=TreeUID,this.SID="scenery",this.NID=t,this.Sprite=SpriteData[this.SID]["dead-tree"],this.X=i,this.Y=s,this.Z=r,this.OldX=i,this.OldY=s,this.OldZ=r,this.Radius=.4,this.Height=1,this.Speed=.1,this.Health=1,e.AddThing(this),this.BlockBorders(),this.AddToBlocks()}Update(){}Render(e,t,i,s){let r=t-this.X,o=i-this.Z,n=Math.sqrt(r*r+o*o);r/=n,o/=n,Render3.Sprite(e[this.SID],this.X,this.Y,this.Z,r,o,this.Sprite)}}class Item{constructor(){this.World=null,this.UID=0,this.SID="",this.NID=0,this.Sprite=null,this.X=0,this.Y=0,this.Z=0,this.DeltaX=0,this.DeltaY=0,this.DeltaZ=0,this.MinBX=0,this.MinBY=0,this.MinBZ=0,this.MaxBX=0,this.MaxBY=0,this.MaxBZ=0,this.Radius=0,this.Height=0}}class Medkit extends Item{}class Missile{constructor(){this.World=null,this.UID=0,this.SID="",this.NID=0,this.Sprite=null,this.X=0,this.Y=0,this.Z=0,this.DeltaX=0,this.DeltaY=0,this.DeltaZ=0,this.MinBX=0,this.MinBY=0,this.MinBZ=0,this.MaxBX=0,this.MaxBY=0,this.MaxBZ=0,this.Radius=0,this.Height=0}BlockBorders(){this.MinBX=Math.floor((this.X-this.Radius)*InverseBlockSize),this.MinBY=Math.floor(this.Y*InverseBlockSize),this.MinBZ=Math.floor((this.Z-this.Radius)*InverseBlockSize),this.MaxBX=Math.floor((this.X+this.Radius)*InverseBlockSize),this.MaxBY=Math.floor((this.Y+this.Height)*InverseBlockSize),this.MaxBZ=Math.floor((this.Z+this.Radius)*InverseBlockSize)}AddToBlocks(){for(let e=this.MinBX;e<=this.MaxBX;e++)for(let t=this.MinBY;t<=this.MaxBY;t++)for(let i=this.MinBZ;i<=this.MaxBZ;i++){let s=this.World.GetBlock(e,t,i);if(null===s)return this.RemoveFromBlocks(),!0;s.AddMissile(this)}return!1}RemoveFromBlocks(){for(let e=this.MinBX;e<=this.MaxBX;e++)for(let t=this.MinBY;t<=this.MaxBY;t++)for(let i=this.MinBZ;i<=this.MaxBZ;i++){let s=this.World.GetBlock(e,t,i);null!==s&&s.RemoveMissile(this)}}Cleanup(){this.World.RemoveMissile(this),this.RemoveFromBlocks()}Update(){return this.RemoveFromBlocks(),this.X+=this.DeltaX,this.Y+=this.DeltaY,this.Z+=this.DeltaZ,this.BlockBorders(),!!this.AddToBlocks()}Render(e,t,i,s){let r=t-this.X,o=i-this.Z,n=Math.sqrt(r*r+o*o);r/=n,o/=n,Render3.Sprite(e[this.SID],this.X,this.Y,this.Z,r,o,this.Sprite)}}class Plasma extends Missile{constructor(e,t,i,s,r,o,n,a,l){return super(),this.World=e,this.X=s,this.Y=r,this.Z=o,this.BlockBorders(),this.AddToBlocks()?this:(this.UID=PlasmaUID,this.SID="missiles",this.NID=t,this.Sprite=SpriteData[this.SID]["baron-missile-front-1"],this.DeltaX=n*InverseNetRate,this.DeltaY=a*InverseNetRate,this.DeltaZ=l*InverseNetRate,this.Radius=.2,this.Height=.2,this.DamageAmount=i,this.Hit=this.PlasmaHit,e.AddMissile(this),this)}Cleanup(){super.Cleanup(),PlaySound("plasma-impact"),new PlasmaExplosion(this.World,this.X,this.Y,this.Z)}}const PlasmaExplosionAnimation=[];class Particle{constructor(){this.World=null,this.SID="",this.Sprite=null,this.X=0,this.Y=0,this.Z=0,this.DeltaX=0,this.DeltaY=0,this.DeltaZ=0,this.MinBX=0,this.MinBY=0,this.MinBZ=0,this.MaxBX=0,this.MaxBY=0,this.MaxBZ=0,this.Radius=0,this.Height=0}BlockBorders(){this.MinBX=Math.floor((this.X-this.Radius)*InverseBlockSize),this.MinBY=Math.floor(this.Y*InverseBlockSize),this.MinBZ=Math.floor((this.Z-this.Radius)*InverseBlockSize),this.MaxBX=Math.floor((this.X+this.Radius)*InverseBlockSize),this.MaxBY=Math.floor((this.Y+this.Height)*InverseBlockSize),this.MaxBZ=Math.floor((this.Z+this.Radius)*InverseBlockSize)}AddToBlocks(){for(let e=this.MinBX;e<=this.MaxBX;e++)for(let t=this.MinBY;t<=this.MaxBY;t++)for(let i=this.MinBZ;i<=this.MaxBZ;i++)this.World.GetBlock(e,t,i).AddParticle(this)}RemoveFromBlocks(){for(let e=this.MinBX;e<=this.MaxBX;e++)for(let t=this.MinBY;t<=this.MaxBY;t++)for(let i=this.MinBZ;i<=this.MaxBZ;i++)this.World.GetBlock(e,t,i).RemoveParticle(this)}Collision(){let e=Math.floor(this.X-this.Radius),t=Math.floor(this.Y),i=Math.floor(this.Z-this.Radius),s=Math.floor(this.X+this.Radius),r=Math.floor(this.Y+this.Height),o=Math.floor(this.Z+this.Radius);for(let n=e;n<=s;n++)for(let e=t;e<=r;e++)for(let t=i;t<=o;t++){let i=Math.floor(n*InverseBlockSize),s=Math.floor(e*InverseBlockSize),r=Math.floor(t*InverseBlockSize),o=n-i*BlockSize,a=e-s*BlockSize,l=t-r*BlockSize,h=this.World.GetTileType(i,s,r,o,a,l);if(TileClosed[h])return!0}return!1}Update(){}Render(e,t,i){let s=t-this.X,r=i-this.Z,o=Math.sqrt(s*s+r*r);s/=o,r/=o,Render3.Sprite(e[this.SID],this.X,this.Y,this.Z,s,r,this.Sprite)}}class PlasmaExplosion extends Particle{constructor(e,t,i,s){return super(),this.SID="particles",this.AnimationMod=0,this.AnimationFrame=0,this.Animation=PlasmaExplosionAnimation,this.Sprite=this.Animation[0],this.World=e,this.X=t,this.Y=i,this.Z=s,this.DeltaX=0,this.DeltaY=0,this.DeltaZ=0,this.Radius=.4,this.Height=1,e.AddParticle(this),this.BlockBorders(),this.AddToBlocks(),this}UpdateAnimation(){if(this.AnimationMod++,8===this.AnimationMod){this.AnimationMod=0,this.AnimationFrame++;let e=this.Animation.length;if(this.AnimationFrame===e-1)return AnimationAlmostDone;if(this.AnimationFrame===e)return AnimationDone}return AnimationNotDone}Update(){return this.UpdateAnimation()===AnimationDone?(this.RemoveFromBlocks(),!0):(this.Sprite=this.Animation[this.AnimationFrame],!1)}}class Blood extends Particle{constructor(e,t,i,s,r,o,n,a){return super(),this.SID="particles",this.Sprite=SpriteData[this.SID][a],this.World=e,this.X=t,this.Y=i,this.Z=s,this.DeltaX=r,this.DeltaY=o,this.DeltaZ=n,this.Radius=.2,this.Height=.2,e.AddParticle(this),this.BlockBorders(),this.AddToBlocks(),this}Update(){return this.DeltaX*=.95,this.DeltaY-=.01,this.DeltaZ*=.95,this.X+=this.DeltaX,this.Y+=this.DeltaY,this.Z+=this.DeltaZ,this.Collision()?(this.RemoveFromBlocks(),!0):(this.RemoveFromBlocks(),this.BlockBorders(),this.AddToBlocks(),!1)}}const HumanAnimationIdle=[],HumanAnimationWalk=[],HumanAnimationMelee=[],HumanAnimationMissile=[],HumanAnimationDeath=[],HumanDead=0,HumanIdle=1,HumanWalk=2,HumanMelee=3,HumanMissile=4;class Human extends Thing{constructor(e,t,i,s,r,o,n,a){super(),this.World=e,this.UID=HumanUID,this.SID="baron",this.NID=t,this.Animation=HumanAnimationWalk,this.X=i,this.Y=s,this.Z=r,this.Angle=o,this.OldX=i,this.OldY=s,this.OldZ=r,this.Radius=.4,this.Height=1,this.Speed=.1,this.Health=n,this.Status=a,e.AddThing(this),this.BlockBorders(),this.AddToBlocks()}NetUpdateState(e){if(this.Status!==e){switch(console.log("human new status",e),this.AnimationMod=0,this.AnimationFrame=0,e){case HumanDead:this.Animation=HumanAnimationDeath;break;case HumanMissile:this.Animation=HumanAnimationMissile,PlaySound("baron-missile"),console.log("baron-missile");break;case HumanIdle:this.Animation=HumanAnimationIdle;default:this.Animation=HumanAnimationWalk}this.Status=e}}NetUpdateHealth(e){if(e<this.Health){PlaySound(e<1?"baron-death":"baron-pain");for(let e=0;e<20;e++){let e="blood-"+Math.floor(3*Math.random()),t=this.X+this.Radius*(1-2*Math.random()),i=this.Y+this.Height*Math.random(),s=this.Z+this.Radius*(1-2*Math.random());const r=.2;let o=r*(1-2*Math.random()),n=r*Math.random(),a=r*(1-2*Math.random());new Blood(this.World,t,i,s,o,n,a,e)}}this.Health=e}Dead(){this.AnimationFrame===this.Animation.length-1?this.Update=this.EmptyUpdate:this.UpdateAnimation()}Missile(){this.UpdateAnimation()===AnimationDone&&(this.AnimationFrame=0,this.Animation=HumanAnimationIdle,this.Status=HumanIdle)}Walk(){this.UpdateAnimation()===AnimationDone&&(this.AnimationFrame=0)}Update(){switch(this.Status){case HumanDead:this.Dead();case HumanMissile:this.Missile();break;case HumanIdle:break;default:this.Walk()}this.LerpNetCode()}EmptyUpdate(){}}const InputOpNewMove=0,InputOpContinueMove=1,InputOpMissile=2;class You extends Human{constructor(e,t,i,s,r,o,n,a){super(e,t,i,s,r,o,n,a),this.camera=null}Walk(){let e=null,t=null;if(Input.Is(" "))return SocketSend.setUint8(SocketSendIndex,InputOpMissile,!0),SocketSendIndex++,void SocketSendOperations++;Input.Is("w")&&(e="w",t=this.camera.ry),Input.Is("s")&&(null===e?(e="s",t=this.camera.ry+Math.PI):(e=null,t=null)),Input.Is("a")&&(null===e?(e="a",t=this.camera.ry-HalfPi):"w"===e?(e="wa",t-=QuarterPi):"s"===e&&(e="sa",t+=QuarterPi)),Input.Is("d")&&(null===e?t=this.camera.ry+HalfPi:"a"===e?t=null:"wa"===e?t=this.camera.ry:"sa"===e?t=this.camera.ry+Math.PI:"w"===e?t+=QuarterPi:"s"===e&&(t-=QuarterPi)),null===t?(this.AnimationMod=0,this.AnimationFrame=0,this.Animation=HumanAnimationIdle):(t<0?t+=Tau:t>=Tau&&(t-=Tau),this.Angle!==t?(this.Angle=t,SocketSend.setUint8(SocketSendIndex,InputOpNewMove,!0),SocketSendIndex++,SocketSend.setFloat32(SocketSendIndex,this.Angle,!0),SocketSendIndex+=4,SocketSendOperations++):(SocketSend.setUint8(SocketSendIndex,InputOpContinueMove,!0),SocketSendIndex++,SocketSendOperations++),this.Animation===HumanAnimationIdle&&(this.Animation=HumanAnimationWalk),this.UpdateAnimation()===AnimationDone&&(this.AnimationFrame=0))}Update(){switch(this.Status){case HumanDead:this.Dead();case HumanMissile:this.Missile();break;default:this.Walk()}this.LerpNetCode()}}const BaronAnimationIdle=[],BaronAnimationWalk=[],BaronAnimationMelee=[],BaronAnimationMissile=[],BaronAnimationDeath=[],BaronSleep=0,BaronDead=1,BaronLook=2,BaronChase=3,BaronMelee=4,BaronMissile=5;class Baron extends Thing{constructor(e,t,i,s,r,o,n,a){super(),this.World=e,this.UID=BaronUID,this.SID="baron",this.NID=t,this.Update=this.BaronUpdate,this.Animation=BaronAnimationWalk,this.X=i,this.Y=s,this.Z=r,this.Angle=DirectionToAngle[o],this.OldX=i,this.OldY=s,this.OldZ=r,this.Radius=.4,this.Height=1,this.Speed=.1,this.Health=n,this.Status=a,e.AddThing(this),this.BlockBorders(),this.AddToBlocks()}NetUpdateState(e){if(this.Status!==e){switch(this.AnimationMod=0,this.AnimationFrame=0,e){case BaronDead:this.Animation=BaronAnimationDeath;break;case BaronMelee:this.Animation=BaronAnimationMelee,PlaySound("baron-melee");break;case BaronMissile:this.Animation=BaronAnimationMissile,PlaySound("baron-missile");break;case BaronChase:Math.random()<.1&&PlaySound("baron-scream");default:this.Animation=BaronAnimationWalk}this.Status=e}}NetUpdateHealth(e){if(e<this.Health){PlaySound(e<1?"baron-death":"baron-pain");for(let e=0;e<20;e++){let e="blood-"+Math.floor(3*Math.random()),t=this.X+this.Radius*(1-2*Math.random()),i=this.Y+this.Height*Math.random(),s=this.Z+this.Radius*(1-2*Math.random());const r=.2;let o=r*(1-2*Math.random()),n=r*Math.random(),a=r*(1-2*Math.random());new Blood(this.World,t,i,s,o,n,a,e)}}this.Health=e}Dead(){this.AnimationFrame===this.Animation.length-1?this.Update=this.EmptyUpdate:this.UpdateAnimation()}Look(){this.UpdateAnimation()===AnimationDone&&(this.AnimationFrame=0)}Melee(){this.UpdateAnimation()===AnimationDone&&(this.AnimationFrame=0,this.Animation=BaronAnimationWalk)}Missile(){this.UpdateAnimation()===AnimationDone&&(this.AnimationFrame=0,this.Animation=BaronAnimationWalk)}Chase(){this.UpdateAnimation()===AnimationDone&&(this.AnimationFrame=0)}BaronUpdate(){switch(this.Status){case BaronDead:this.Dead();break;case BaronLook:this.Look();break;case BaronMelee:this.Melee();break;case BaronMissile:this.Missile();break;case BaronChase:this.Chase()}this.LerpNetCode()}EmptyUpdate(){}}const TILE_NONE=0,TILE_GROUND=1,TILE_RAILS_RIGHT=2,TILE_STAIRS_RIGHT=3,TILE_RAIL=4,TILE_WALL=5,TILE_WATER_TOP=6,TILE_WATER=7,TILE_RAILS_LEFT=8,TILE_STAIRS_LEFT=9,AMBIENT_LOW=100,AMBIENT_HALF=175,AMBIENT_FULL=255,TileTexture=[],TileClosed=[];class Tile{constructor(){this.type=TILE_NONE,this.red=0,this.green=0,this.blue=0}static Ambient(e,t,i){return e&&t?AMBIENT_LOW:e||t||i?AMBIENT_HALF:AMBIENT_FULL}}const BlockSize=8,InverseBlockSize=1/BlockSize,BLOCK_SLICE=BlockSize*BlockSize,BlockAll=BLOCK_SLICE*BlockSize,BLOCK_MESH=new RenderCopy(3,3,2,6*BlockAll*4,6*BlockAll*6),BLOCK_MESH_AMBIENT=new Array(BlockAll);for(let e=0;e<BlockAll;e++){BLOCK_MESH_AMBIENT[e]=new Array(6);for(let t=0;t<6;t++)BLOCK_MESH_AMBIENT[e][t]=new Uint8Array(4)}const BLOCK_COLOR_DIM=BlockSize+1,BLOCK_COLOR_SLICE=BLOCK_COLOR_DIM*BLOCK_COLOR_DIM,BLOCK_MESH_COLOR=new Array(BLOCK_COLOR_DIM*BLOCK_COLOR_SLICE);for(let e=0;e<BLOCK_MESH_COLOR.length;e++)BLOCK_MESH_COLOR[e]=new Uint8Array(3);const SLICE_X=[2,1,0,2,1,0],SLICE_Y=[0,2,1,0,2,1],SLICE_Z=[1,0,2,1,0,2],SLICE_TOWARDS=[1,1,1,-1,-1,-1],SLICE=new Array(3),SLICE_TEMP=new Array(3);class Block{constructor(e,t,i){this.x=e,this.y=t,this.z=i,this.mesh,this.visibility=new Uint8Array(36),this.begin_side=new Array(6),this.count_side=new Array(6),this.thingCount=0,this.itemCount=0,this.missileCount=0,this.particleCount=0,this.lightCount=0,this.things=[],this.items=[],this.missiles=[],this.particles=[],this.lights=[],this.tiles=[];for(let e=0;e<BlockAll;e++)this.tiles[e]=new Tile}GetTilePointerUnsafe(e,t,i){return this.tiles[e+t*BlockSize+i*BLOCK_SLICE]}GetTileTypeUnsafe(e,t,i){return this.tiles[e+t*BlockSize+i*BLOCK_SLICE].type}AddThing(e){this.things[this.thingCount]=e,this.thingCount++}AddItem(e){this.items[this.itemCount]=e,this.itemCount++}AddMissile(e){this.missiles[this.missileCount]=e,this.missileCount++}AddParticle(e){this.particles[this.particleCount]=e,this.particleCount++}RemoveThing(e){let t=this.thingCount;for(let i=0;i<t;i++)if(this.things[i]===e)return this.things[i]=this.things[t-1],this.things[t-1]=null,void this.thingCount--}RemoveItem(e){let t=this.itemCount;for(let i=0;i<t;i++)if(this.items[i]===e){this.items[i]=this.items[t-1],this.items[t-1]=null,this.itemCount--;break}}RemoveMissile(e){let t=this.missileCount;for(let i=0;i<t;i++)if(this.missiles[i]===e){this.missiles[i]=this.missiles[t-1],this.missiles[t-1]=null,this.missileCount--;break}}RemoveParticle(e){let t=this.particleCount;for(let i=0;i<t;i++)if(this.particles[i]===e){this.particles[i]=this.particles[t-1],this.particles[t-1]=null,this.particleCount--;break}}AddLight(e){this.lights[this.lightCount]=e,this.lightCount++}RemoveLight(e){for(let t=0;t<this.lightCount;t++)if(this.lights[t]===e){for(let e=t;e<this.lightCount-1;e++)this.lights[e]=this.lights[e+1];return void this.lightCount--}}AmbientMesh(e){for(let t=0;t<BlockSize;t++)for(let i=0;i<BlockSize;i++)for(let s=0;s<BlockSize;s++){let r=s+i*BlockSize+t*BLOCK_SLICE;if(this.tiles[r].type===TILE_NONE)continue;let o=TileClosed[e.GetTileType(this.x,this.y,this.z,s-1,i-1,t)],n=TileClosed[e.GetTileType(this.x,this.y,this.z,s-1,i-1,t-1)],a=TileClosed[e.GetTileType(this.x,this.y,this.z,s-1,i-1,t+1)],l=TileClosed[e.GetTileType(this.x,this.y,this.z,s-1,i,t+1)],h=TileClosed[e.GetTileType(this.x,this.y,this.z,s-1,i,t-1)],_=TileClosed[e.GetTileType(this.x,this.y,this.z,s-1,i+1,t)],I=TileClosed[e.GetTileType(this.x,this.y,this.z,s-1,i+1,t+1)],c=TileClosed[e.GetTileType(this.x,this.y,this.z,s-1,i+1,t-1)],T=TileClosed[e.GetTileType(this.x,this.y,this.z,s,i+1,t+1)],M=TileClosed[e.GetTileType(this.x,this.y,this.z,s,i-1,t+1)],d=TileClosed[e.GetTileType(this.x,this.y,this.z,s,i+1,t-1)],v=TileClosed[e.GetTileType(this.x,this.y,this.z,s,i-1,t-1)],p=TileClosed[e.GetTileType(this.x,this.y,this.z,s+1,i+1,t)],E=TileClosed[e.GetTileType(this.x,this.y,this.z,s+1,i-1,t)],u=TileClosed[e.GetTileType(this.x,this.y,this.z,s+1,i,t+1)],C=TileClosed[e.GetTileType(this.x,this.y,this.z,s+1,i,t-1)],A=TileClosed[e.GetTileType(this.x,this.y,this.z,s+1,i-1,t-1)],R=TileClosed[e.GetTileType(this.x,this.y,this.z,s+1,i+1,t-1)],m=TileClosed[e.GetTileType(this.x,this.y,this.z,s+1,i+1,t+1)],O=TileClosed[e.GetTileType(this.x,this.y,this.z,s+1,i-1,t+1)];BLOCK_MESH_AMBIENT[r][WorldPositiveX][0]=Tile.Ambient(E,C,A),BLOCK_MESH_AMBIENT[r][WorldPositiveX][1]=Tile.Ambient(p,C,R),BLOCK_MESH_AMBIENT[r][WorldPositiveX][2]=Tile.Ambient(p,u,m),BLOCK_MESH_AMBIENT[r][WorldPositiveX][3]=Tile.Ambient(E,u,O),BLOCK_MESH_AMBIENT[r][WorldNegativeX][0]=Tile.Ambient(o,h,n),BLOCK_MESH_AMBIENT[r][WorldNegativeX][1]=Tile.Ambient(o,l,a),BLOCK_MESH_AMBIENT[r][WorldNegativeX][2]=Tile.Ambient(_,l,I),BLOCK_MESH_AMBIENT[r][WorldNegativeX][3]=Tile.Ambient(_,h,c),BLOCK_MESH_AMBIENT[r][WorldPositiveY][0]=Tile.Ambient(_,d,c),BLOCK_MESH_AMBIENT[r][WorldPositiveY][1]=Tile.Ambient(_,T,I),BLOCK_MESH_AMBIENT[r][WorldPositiveY][2]=Tile.Ambient(p,T,m),BLOCK_MESH_AMBIENT[r][WorldPositiveY][3]=Tile.Ambient(p,d,R),BLOCK_MESH_AMBIENT[r][WorldNegativeY][0]=Tile.Ambient(o,v,n),BLOCK_MESH_AMBIENT[r][WorldNegativeY][1]=Tile.Ambient(E,v,A),BLOCK_MESH_AMBIENT[r][WorldNegativeY][2]=Tile.Ambient(E,M,O),BLOCK_MESH_AMBIENT[r][WorldNegativeY][3]=Tile.Ambient(o,M,a),BLOCK_MESH_AMBIENT[r][WorldPositiveZ][0]=Tile.Ambient(u,M,O),BLOCK_MESH_AMBIENT[r][WorldPositiveZ][1]=Tile.Ambient(u,T,m),BLOCK_MESH_AMBIENT[r][WorldPositiveZ][2]=Tile.Ambient(l,T,I),BLOCK_MESH_AMBIENT[r][WorldPositiveZ][3]=Tile.Ambient(l,M,a),BLOCK_MESH_AMBIENT[r][WorldNegativeZ][0]=Tile.Ambient(h,v,n),BLOCK_MESH_AMBIENT[r][WorldNegativeZ][1]=Tile.Ambient(h,d,c),BLOCK_MESH_AMBIENT[r][WorldNegativeZ][2]=Tile.Ambient(C,d,R),BLOCK_MESH_AMBIENT[r][WorldNegativeZ][3]=Tile.Ambient(C,v,A)}}ColorMesh(e){for(let t=0;t<BLOCK_COLOR_DIM;t++)for(let i=0;i<BLOCK_COLOR_DIM;i++)for(let s=0;s<BLOCK_COLOR_DIM;s++){let r=[0,0,0,0],o=e.GetTilePointer(this.x,this.y,this.z,s,i,t),n=e.GetTilePointer(this.x,this.y,this.z,s-1,i,t),a=e.GetTilePointer(this.x,this.y,this.z,s-1,i,t-1),l=e.GetTilePointer(this.x,this.y,this.z,s,i,t-1),h=e.GetTilePointer(this.x,this.y,this.z,s,i-1,t),_=e.GetTilePointer(this.x,this.y,this.z,s-1,i-1,t),I=e.GetTilePointer(this.x,this.y,this.z,s-1,i-1,t-1),c=e.GetTilePointer(this.x,this.y,this.z,s,i-1,t-1);(null===o||TileClosed[o.type])&&(this.DetermineLight(n,r),this.DetermineLight(h,r),this.DetermineLight(l,r)),(null===n||TileClosed[n.type])&&(this.DetermineLight(o,r),this.DetermineLight(h,r),this.DetermineLight(l,r)),(null===a||TileClosed[a.type])&&(this.DetermineLight(n,r),this.DetermineLight(l,r),this.DetermineLight(I,r)),(null===l||TileClosed[l.type])&&(this.DetermineLight(o,r),this.DetermineLight(a,r),this.DetermineLight(c,r)),(null===h||TileClosed[h.type])&&(this.DetermineLight(o,r),this.DetermineLight(_,r),this.DetermineLight(c,r)),(null===_||TileClosed[_.type])&&(this.DetermineLight(n,r),this.DetermineLight(I,r),this.DetermineLight(h,r)),(null===I||TileClosed[I.type])&&(this.DetermineLight(a,r),this.DetermineLight(c,r),this.DetermineLight(_,r)),(null===c||TileClosed[c.type])&&(this.DetermineLight(l,r),this.DetermineLight(h,r),this.DetermineLight(I,r));let T=s+i*BLOCK_COLOR_DIM+t*BLOCK_COLOR_SLICE;r[3]>0?(BLOCK_MESH_COLOR[T][0]=r[0]/r[3],BLOCK_MESH_COLOR[T][1]=r[1]/r[3],BLOCK_MESH_COLOR[T][2]=r[2]/r[3]):(BLOCK_MESH_COLOR[T][0]=255,BLOCK_MESH_COLOR[T][1]=255,BLOCK_MESH_COLOR[T][2]=255)}}DetermineLight(e,t){null!==e&&(TileClosed[e.type]||(t[0]+=e.red,t[1]+=e.green,t[2]+=e.blue,t[3]++))}LightOfSide(e,t,i,s){switch(s){case WorldPositiveX:return[BLOCK_MESH_COLOR[e+1+t*BLOCK_COLOR_DIM+i*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+1+(t+1)*BLOCK_COLOR_DIM+i*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+1+(t+1)*BLOCK_COLOR_DIM+(i+1)*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+1+t*BLOCK_COLOR_DIM+(i+1)*BLOCK_COLOR_SLICE]];case WorldNegativeX:return[BLOCK_MESH_COLOR[e+t*BLOCK_COLOR_DIM+i*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+t*BLOCK_COLOR_DIM+(i+1)*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+(t+1)*BLOCK_COLOR_DIM+(i+1)*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+(t+1)*BLOCK_COLOR_DIM+i*BLOCK_COLOR_SLICE]];case WorldPositiveY:return[BLOCK_MESH_COLOR[e+(t+1)*BLOCK_COLOR_DIM+i*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+(t+1)*BLOCK_COLOR_DIM+(i+1)*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+1+(t+1)*BLOCK_COLOR_DIM+(i+1)*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+1+(t+1)*BLOCK_COLOR_DIM+i*BLOCK_COLOR_SLICE]];case WorldNegativeY:return[BLOCK_MESH_COLOR[e+t*BLOCK_COLOR_DIM+i*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+1+t*BLOCK_COLOR_DIM+i*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+1+t*BLOCK_COLOR_DIM+(i+1)*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+t*BLOCK_COLOR_DIM+(i+1)*BLOCK_COLOR_SLICE]];case WorldPositiveZ:return[BLOCK_MESH_COLOR[e+1+t*BLOCK_COLOR_DIM+(i+1)*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+1+(t+1)*BLOCK_COLOR_DIM+(i+1)*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+(t+1)*BLOCK_COLOR_DIM+(i+1)*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+t*BLOCK_COLOR_DIM+(i+1)*BLOCK_COLOR_SLICE]];default:return[BLOCK_MESH_COLOR[e+t*BLOCK_COLOR_DIM+i*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+(t+1)*BLOCK_COLOR_DIM+i*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+1+(t+1)*BLOCK_COLOR_DIM+i*BLOCK_COLOR_SLICE],BLOCK_MESH_COLOR[e+1+t*BLOCK_COLOR_DIM+i*BLOCK_COLOR_SLICE]]}}BuildMesh(e){this.AmbientMesh(e),this.ColorMesh(e),BLOCK_MESH.Zero();for(let t=0;t<6;t++){let i=BLOCK_MESH.index_pos,s=SLICE_X[t],r=SLICE_Y[t],o=SLICE_Z[t],n=SLICE_TOWARDS[t];for(SLICE[2]=0;SLICE[2]<BlockSize;SLICE[2]++)for(SLICE[1]=0;SLICE[1]<BlockSize;SLICE[1]++)for(SLICE[0]=0;SLICE[0]<BlockSize;SLICE[0]++){let i=this.GetTileTypeUnsafe(SLICE[s],SLICE[r],SLICE[o]);if(i===TILE_NONE)continue;if(SLICE_TEMP[0]=SLICE[0],SLICE_TEMP[1]=SLICE[1],SLICE_TEMP[2]=SLICE[2]+n,TileClosed[e.GetTileType(this.x,this.y,this.z,SLICE_TEMP[s],SLICE_TEMP[r],SLICE_TEMP[o])])continue;let a=SLICE[s],l=SLICE[r],h=SLICE[o],_=a+l*BlockSize+h*BLOCK_SLICE,I=TileTexture[i],c=a+BlockSize*this.x,T=l+BlockSize*this.y,M=h+BlockSize*this.z,d=this.LightOfSide(a,l,h,t),v=BLOCK_MESH_AMBIENT[_][t],p=Light.Colorize(d[0],v[0]),E=Light.Colorize(d[1],v[1]),u=Light.Colorize(d[2],v[2]),C=Light.Colorize(d[3],v[3]);RenderTile.Side(BLOCK_MESH,t,c,T,M,I,p,E,u,C)}this.begin_side[t]=4*i,this.count_side[t]=BLOCK_MESH.index_pos-i}this.mesh=RenderBuffer.InitCopy(e.gl,BLOCK_MESH)}RenderThings(e,t,i,s,r){for(let o=0;o<this.thingCount;o++){let n=this.things[o];e.has(n)||(e.add(n),n.Render(t,i,s,r))}for(let o=0;o<this.itemCount;o++){let n=this.items[o];e.has(n)||(e.add(n),n.Render(t,i,s,r))}for(let o=0;o<this.missileCount;o++){let n=this.missiles[o];e.has(n)||(e.add(n),n.Render(t,i,s,r))}for(let r=0;r<this.particleCount;r++){let o=this.particles[r];e.has(o)||(e.add(o),o.Render(t,i,s))}}}const OCCLUSION_SLICE_A=new Int32Array(3),OCCLUSION_SLICE_B=new Int32Array(3),OCCLUSION_FULLY=0,OCCLUSION_PARTIALLY=1,OCCLUSION_NOTHING=2,OCCLUSION_QUEUE=[],OCCLUSION_GOTO=[],OCCLUSION_QUEUE_FROM=[];let OCCLUSION_VIEW_NUM=0,OCCLUSION_QUEUE_POS=0,OCCLUSION_QUEUE_NUM=0;class Occluder{constructor(){this.frustum=[];for(let e=0;e<6;e++)this.frustum.push(new Float32Array(4))}static SetBlockVisible(e){for(let t=0;t<6;t++){let i=SLICE_X[t],s=SLICE_Y[t],r=SLICE_Z[t];for(let o=t+1;o<6;o++){let n=SLICE_X[o],a=SLICE_Y[o],l=SLICE_Z[o];SLICE_TOWARDS[t]>0?OCCLUSION_SLICE_A[2]=BlockSize-1:OCCLUSION_SLICE_A[2]=0,SLICE_TOWARDS[o]>0?OCCLUSION_SLICE_B[2]=BlockSize-1:OCCLUSION_SLICE_B[2]=0;e:for(OCCLUSION_SLICE_A[1]=0;OCCLUSION_SLICE_A[1]<BlockSize;OCCLUSION_SLICE_A[1]++)for(OCCLUSION_SLICE_A[0]=0;OCCLUSION_SLICE_A[0]<BlockSize;OCCLUSION_SLICE_A[0]++)for(OCCLUSION_SLICE_B[1]=0;OCCLUSION_SLICE_B[1]<BlockSize;OCCLUSION_SLICE_B[1]++)for(OCCLUSION_SLICE_B[0]=0;OCCLUSION_SLICE_B[0]<BlockSize;OCCLUSION_SLICE_B[0]++){let h=OCCLUSION_SLICE_A[i]+.5,_=OCCLUSION_SLICE_A[s]+.5,I=OCCLUSION_SLICE_A[r]+.5,c=OCCLUSION_SLICE_B[n]+.5,T=OCCLUSION_SLICE_B[a]+.5,M=OCCLUSION_SLICE_B[l]+.5;if(Cast.Chunk(e,h,_,I,c,T,M)){e.visibility[6*t+o]=1;break e}}}}}visit(e,t,i,s){let r=i.x,o=i.y,n=i.z;switch(s){case WorldPositiveX:if(++r===e.width)return;break;case WorldNegativeX:if(-1===--r)return;break;case WorldPositiveY:if(++o===e.height)return;break;case WorldNegativeY:if(-1===--o)return;break;case WorldPositiveZ:if(++n===e.length)return;break;case WorldNegativeZ:if(-1===--n)return}let a=r+o*e.width+n*e.slice;if(!1===OCCLUSION_GOTO[a])return;if(t>=0){switch(t){case WorldPositiveX:t=WorldNegativeX;break;case WorldNegativeX:t=WorldPositiveX;break;case WorldPositiveY:t=WorldNegativeY;break;case WorldNegativeY:t=WorldPositiveY;break;case WorldPositiveZ:t=WorldNegativeZ;break;case WorldNegativeZ:t=WorldPositiveZ}let e,r;if(t<s?(e=t,r=s):(e=s,r=t),0===i.visibility[6*e+r])return}OCCLUSION_GOTO[a]=!1;let l=e.blocks[a],h=l.x*BlockSize,_=l.y*BlockSize,I=l.z*BlockSize;if(this.in_box(h+BlockSize,_+BlockSize,I+BlockSize,h,_,I)===OCCLUSION_NOTHING)return;let c=OCCLUSION_QUEUE_POS+OCCLUSION_QUEUE_NUM;c>=e.all&&(c-=e.all),OCCLUSION_QUEUE[c]=l,OCCLUSION_QUEUE_FROM[c]=s,OCCLUSION_QUEUE_NUM++}in_box(e,t,i,s,r,o){let n,a,l,h,_,I,c=OCCLUSION_FULLY;for(let T=0;T<6;T++){let M=this.frustum[T];if(M[0]>0?(n=e,h=s):(n=s,h=e),M[1]>0?(a=t,_=r):(a=r,_=t),M[2]>0?(l=i,I=o):(l=o,I=i),n*M[0]+a*M[1]+l*M[2]+M[3]<0)return OCCLUSION_NOTHING;h*M[0]+_*M[1]+I*M[2]+M[3]<0&&(c=OCCLUSION_PARTIALLY)}return c}prepare_frustum(e){this.frustum[0][0]=e.mvp[3]+e.mvp[0],this.frustum[0][1]=e.mvp[7]+e.mvp[4],this.frustum[0][2]=e.mvp[11]+e.mvp[8],this.frustum[0][3]=e.mvp[15]+e.mvp[12],this.normalize_plane(0),this.frustum[1][0]=e.mvp[3]-e.mvp[0],this.frustum[1][1]=e.mvp[7]-e.mvp[4],this.frustum[1][2]=e.mvp[11]-e.mvp[8],this.frustum[1][3]=e.mvp[15]-e.mvp[12],this.normalize_plane(1),this.frustum[2][0]=e.mvp[3]-e.mvp[1],this.frustum[2][1]=e.mvp[7]-e.mvp[5],this.frustum[2][2]=e.mvp[11]-e.mvp[9],this.frustum[2][3]=e.mvp[15]-e.mvp[13],this.normalize_plane(2),this.frustum[3][0]=e.mvp[3]+e.mvp[1],this.frustum[3][1]=e.mvp[7]+e.mvp[5],this.frustum[3][2]=e.mvp[11]+e.mvp[9],this.frustum[3][3]=e.mvp[15]+e.mvp[13],this.normalize_plane(3),this.frustum[4][0]=e.mvp[3]+e.mvp[2],this.frustum[4][1]=e.mvp[7]+e.mvp[6],this.frustum[4][2]=e.mvp[11]+e.mvp[10],this.frustum[4][3]=e.mvp[15]+e.mvp[14],this.normalize_plane(4),this.frustum[5][0]=e.mvp[3]-e.mvp[2],this.frustum[5][1]=e.mvp[7]-e.mvp[6],this.frustum[5][2]=e.mvp[11]-e.mvp[10],this.frustum[5][3]=e.mvp[15]-e.mvp[14],this.normalize_plane(5)}normalize_plane(e){let t=Math.sqrt(this.frustum[e][0]*this.frustum[e][0]+this.frustum[e][1]*this.frustum[e][1]+this.frustum[e][2]*this.frustum[e][2]);this.frustum[e][0]/=t,this.frustum[e][1]/=t,this.frustum[e][2]/=t,this.frustum[e][3]/=t}occlude(e,t,i,s){OCCLUSION_VIEW_NUM=0;let r=t+i*e.width+s*e.slice;if(r<0||r>=e.all)for(;OCCLUSION_VIEW_NUM<e.all;)e.viewable[OCCLUSION_VIEW_NUM]=e.blocks[OCCLUSION_VIEW_NUM],OCCLUSION_VIEW_NUM++;else{OCCLUSION_QUEUE_POS=0,OCCLUSION_QUEUE_NUM=1,OCCLUSION_QUEUE[0]=e.blocks[r],OCCLUSION_QUEUE_FROM[0]=-1;for(let t=0;t<e.all;t++)OCCLUSION_GOTO[t]=!0;for(;OCCLUSION_QUEUE_NUM>0;){let t=OCCLUSION_QUEUE[OCCLUSION_QUEUE_POS],i=OCCLUSION_QUEUE_FROM[OCCLUSION_QUEUE_POS];e.viewable[OCCLUSION_VIEW_NUM]=t,OCCLUSION_VIEW_NUM++,++OCCLUSION_QUEUE_POS===e.all&&(OCCLUSION_QUEUE_POS=0),OCCLUSION_QUEUE_NUM--,i!==WorldNegativeX&&this.visit(e,i,t,WorldPositiveX),i!==WorldPositiveX&&this.visit(e,i,t,WorldNegativeX),i!==WorldNegativeY&&this.visit(e,i,t,WorldPositiveY),i!==WorldPositiveY&&this.visit(e,i,t,WorldNegativeY),i!==WorldNegativeZ&&this.visit(e,i,t,WorldPositiveZ),i!==WorldPositiveZ&&this.visit(e,i,t,WorldNegativeZ)}}}}class Cast{static Chunk(e,t,i,s,r,o,n){let a,l,h,_,I,c,T,M,d,v=Math.floor(t),p=Math.floor(i),E=Math.floor(s),u=r-t;0===u?(_=0,T=Number.MAX_VALUE):u>0?(_=1,T=(v+1-t)*(a=1/u)):(_=-1,T=(t-v)*(a=1/-u));let C=o-i;0===C?(I=0,M=Number.MAX_VALUE):C>0?(I=1,M=(p+1-i)*(l=1/C)):(I=-1,M=(i-p)*(l=1/-C));let A=n-s;for(0===A?(c=0,d=Number.MAX_VALUE):A>0?(c=1,d=(E+1-s)*(h=1/A)):(c=-1,d=(s-E)*(h=1/-A));;){if(TileClosed[e.GetTileTypeUnsafe(v,p,E)])return!1;if(v===Math.floor(r)&&p===Math.floor(o)&&E===Math.floor(n))return!0;if(T<M)if(T<d){if((v+=_)<0||v>=BlockSize)return!1;T+=a}else{if((E+=c)<0||E>=BlockSize)return!1;d+=h}else if(M<d){if((p+=I)<0||p>=BlockSize)return!1;M+=l}else{if((E+=c)<0||E>=BlockSize)return!1;d+=h}}}static World(e,t,i,s,r,o,n){let a,l,h,_,I,c,T,M,d,v=Math.floor(t),p=Math.floor(i),E=Math.floor(s),u=r-t;0===u?(_=0,T=Number.MAX_VALUE):u>0?(_=1,T=(v+1-t)*(a=1/u)):(_=-1,T=(t-v)*(a=1/-u));let C=o-i;0===C?(I=0,M=Number.MAX_VALUE):C>0?(I=1,M=(p+1-i)*(l=1/C)):(I=-1,M=(i-p)*(l=1/-C));let A=n-s;for(0===A?(c=0,d=Number.MAX_VALUE):A>0?(c=1,d=(E+1-s)*(h=1/A)):(c=-1,d=(s-E)*(h=1/-A));;){if(console.log(`${v} ${p} ${E}`),v===Math.floor(r)&&p===Math.floor(o)&&E===Math.floor(n))return[r,o,n];if(T<M)if(T<d){if((v+=_)<0||v>=e.blocks_w)return[v+.5,p+.5,E+.5,_<0?WorldPositiveX:WorldNegativeX];let t=Math.floor(v*InverseBlockSize),i=Math.floor(p*InverseBlockSize),s=Math.floor(E*InverseBlockSize),r=v%BlockSize,o=p%BlockSize,n=E%BlockSize;if(TileClosed[e.GetTileType(t,i,s,r,o,n)])return[v-=_,p,E,_<0?WorldPositiveX:WorldNegativeX];T+=a}else{if((E+=c)<0||E>=e.blocks_l)return[v+.5,p+.5,E+.5];let t=Math.floor(v*InverseBlockSize),i=Math.floor(p*InverseBlockSize),s=Math.floor(E*InverseBlockSize),r=v%BlockSize,o=p%BlockSize,n=E%BlockSize;if(TileClosed[e.GetTileType(t,i,s,r,o,n)])return[v,p,E-=c,_<0?WorldPositiveX:WorldNegativeX];d+=h}else if(M<d){if((p+=I)<0||p>=e.blocks_h)return[v+.5,p+.5,E+.5];let t=Math.floor(v*InverseBlockSize),i=Math.floor(p*InverseBlockSize),s=Math.floor(E*InverseBlockSize),r=v%BlockSize,o=p%BlockSize,n=E%BlockSize;if(TileClosed[e.GetTileType(t,i,s,r,o,n)])return[v+.5,(p-=I)+.5,E+.5];M+=l}else{if((E+=c)<0||E>=e.blocks_l)return[v+.5,p+.5,E+.5];let t=Math.floor(v*InverseBlockSize),i=Math.floor(p*InverseBlockSize),s=Math.floor(E*InverseBlockSize),r=v%BlockSize,o=p%BlockSize,n=E%BlockSize;if(TileClosed[e.GetTileType(t,i,s,r,o,n)])return[v+.5,p+.5,(E-=c)+.5];d+=h}}}}class Parser{static read(e){let t={},i=[t],s="",r="",o="key";for(let t=0;t<e.length;t++){let n=e[t];if(":"===n)o="value";else if(","===n){let n=e[t-1];"}"!==n&&"]"!==n&&(i[0].constructor===Array?i[0].push(r):(i[0][s]=r,s="",o="key"),r="")}else if("{"===n){let e={};i[0].constructor===Array?(i[0].push(e),o="key"):(i[0][s]=e,s=""),i.unshift(e)}else if("["===n){let e=[];i[0].constructor===Array?i[0].push(e):(i[0][s]=e,s=""),i.unshift(e),o="value"}else if("}"===n){let n=e[t-1];","!==n&&"{"!==n&&"]"!==n&&"}"!==n&&(i[0][s]=r,s="",r=""),i.shift(),o=i[0].constructor===Array?"value":"key"}else if("]"===n){let s=e[t-1];","!==s&&"["!==s&&"]"!==s&&"}"!==s&&(i[0].push(r),r=""),i.shift(),o=i[0].constructor===Array?"value":"key"}else"key"===o?s+=n:r+=n}let n=e[e.length-1];return","!==n&&"]"!==n&&"}"!==n&&(i[0][s]=r),t}}const NetUpdateRate=50,InverseNetRate=16.67/50,WorldPositiveX=0,WorldPositiveY=1,WorldPositiveZ=2,WorldNegativeX=3,WorldNegativeY=4,WorldNegativeZ=5,BroadcastNew=0,BroadcastDelete=1;class World{constructor(e,t){this.g=e,this.gl=t,this.width,this.height,this.length,this.slice,this.all,this.blocks,this.viewable,this.spriteSet,this.spriteBuffer,this.spriteCount,this.thingCount,this.itemCount,this.missileCount,this.particleCount,this.things,this.items,this.missiles,this.particles,this.netLookup,this.occluder=new Occluder,this.PID}Load(e){this.blocks=[],this.viewable=[],this.spriteSet=new Set,this.spriteBuffer={},this.spriteCount={},this.thingCount=0,this.itemCount=0,this.missileCount=0,this.particleCount=0,this.things=[],this.items=[],this.missiles=[],this.particles=[],this.netLookup={};let t=new DataView(e),i=0;this.PID=t.getUint16(i,!0),i+=2,this.width=t.getUint16(i,!0),i+=2,this.height=t.getUint16(i,!0),i+=2,this.length=t.getUint16(i,!0),i+=2,this.slice=this.width*this.height,this.all=this.slice*this.length;let s=0,r=0,o=0;for(let e=0;e<this.all;e++)this.blocks[e]=new Block(s,r,o),++s===this.width&&(s=0,++r===this.height&&(r=0,o++));for(let e=0;e<this.all;e++){let s=this.blocks[e],r=t.getUint8(i,!0);if(i+=1,r)for(let e=0;e<BlockAll;e++){let r=t.getUint8(i,!0);i+=1,s.tiles[e].type=r}let o=t.getUint8(i,!0);i+=1;for(let e=0;e<o;e++){let e=t.getUint16(i,!0);i+=2;let s=t.getUint16(i,!0);i+=2;let r=t.getFloat32(i,!0);i+=4;let o=t.getFloat32(i,!0);i+=4;let n=t.getFloat32(i,!0);switch(i+=4,e){case HumanUID:{let e=t.getFloat32(i,!0);i+=4;let a=t.getUint16(i,!0);i+=2;let l=t.getUint8(i,!0);i+=1,s===this.PID?new You(this,s,r,o,n,e,a,l):new Human(this,s,r,o,n,e,a,l)}break;case BaronUID:{let e=t.getUint8(i,!0);i+=1;let a=t.getUint16(i,!0);i+=2;let l=t.getUint8(i,!0);i+=1,new Baron(this,s,r,o,n,e,a,l)}break;case TreeUID:new Tree(this,s,r,o,n)}}let n=t.getUint8(i,!0);for(let e=0;e<n;e++)console.log("new item");i+=1;let a=t.getUint8(i,!0);i+=1;for(let e=0;e<a;e++){let e=t.getUint16(i,!0);switch(i+=2,e){case PlasmaUID:{let e=t.getUint16(i,!0);i+=2;let s=t.getFloat32(i,!0);i+=4;let r=t.getFloat32(i,!0);i+=4;let o=t.getFloat32(i,!0);i+=4;let n=t.getFloat32(i,!0);i+=4;let a=t.getFloat32(i,!0);i+=4;let l=t.getFloat32(i,!0);i+=4;let h=t.getUint16(i,!0);i+=2,new Plasma(this,e,h,s,r,o,n,a,l)}}}let l=t.getUint8(i,!0);i+=1;for(let e=0;e<l;e++){let e=t.getUint8(i,!0);i+=1;let r=t.getUint8(i,!0);i+=1;let o=t.getUint8(i,!0);i+=1;let n=t.getInt32(i,!0);i+=4,s.AddLight(new Light(e,r,o,n))}}this.build()}build(){for(let e=0;e<this.all;e++){let t=this.blocks[e];for(let e=0;e<t.lights.length;e++)Light.Add(this,t,t.lights[e]);Occluder.SetBlockVisible(t)}for(let e=0;e<this.all;e++)this.blocks[e].BuildMesh(this)}FindBlock(e,t,i){let s=Math.floor(e),r=Math.floor(t),o=Math.floor(i),n=Math.floor(s*InverseBlockSize),a=Math.floor(r*InverseBlockSize),l=Math.floor(o*InverseBlockSize),h=s-n*BlockSize,_=r-a*BlockSize,I=o-l*BlockSize;return this.blocks[n+a*this.width+l*this.slice].tiles[h+_*BlockSize+I*BLOCK_SLICE].type}GetTilePointer(e,t,i,s,r,o){for(;s<0;)s+=BlockSize,e--;for(;s>=BlockSize;)s-=BlockSize,e++;for(;r<0;)r+=BlockSize,t--;for(;r>=BlockSize;)r-=BlockSize,t++;for(;o<0;)o+=BlockSize,i--;for(;o>=BlockSize;)o-=BlockSize,i++;let n=this.GetBlock(e,t,i);return null===n?null:n.GetTilePointerUnsafe(s,r,o)}GetTileType(e,t,i,s,r,o){for(;s<0;)s+=BlockSize,e--;for(;s>=BlockSize;)s-=BlockSize,e++;for(;r<0;)r+=BlockSize,t--;for(;r>=BlockSize;)r-=BlockSize,t++;for(;o<0;)o+=BlockSize,i--;for(;o>=BlockSize;)o-=BlockSize,i++;let n=this.GetBlock(e,t,i);return null===n?TILE_NONE:n.GetTileTypeUnsafe(s,r,o)}GetBlock(e,t,i){return e<0||e>=this.width?null:t<0||t>=this.height?null:i<0||i>=this.length?null:this.blocks[e+t*this.width+i*this.slice]}AddThing(e){this.things[this.thingCount]=e,this.thingCount++,this.netLookup[e.NID]=e;let t=this.spriteCount[e.SID];t?(this.spriteCount[e.SID]=t+1,16*(t+2)>this.spriteBuffer[e.SID].vertices.length&&(this.spriteBuffer[e.SID]=RenderBuffer.Expand(this.gl,this.spriteBuffer[e.SID]))):(this.spriteCount[e.SID]=1,this.spriteBuffer[e.SID]=RenderBuffer.Init(this.gl,3,0,2,40,60))}AddItem(e){this.items[this.itemCount]=e,this.itemCount++,this.netLookup[e.NID]=e;let t=this.spriteCount[e.SID];t?(this.spriteCount[e.SID]=t+1,16*(t+2)>this.spriteBuffer[e.SID].vertices.length&&(this.spriteBuffer[e.SID]=RenderBuffer.Expand(this.gl,this.spriteBuffer[e.SID]))):(this.spriteCount[e.SID]=1,this.spriteBuffer[e.SID]=RenderBuffer.Init(this.gl,3,0,2,40,60))}AddMissile(e){this.missiles[this.missileCount]=e,this.missileCount++,this.netLookup[e.NID]=e;let t=this.spriteCount[e.SID];t?(this.spriteCount[e.SID]=t+1,16*(t+2)>this.spriteBuffer[e.SID].vertices.length&&(this.spriteBuffer[e.SID]=RenderBuffer.Expand(this.gl,this.spriteBuffer[e.SID]))):(this.spriteCount[e.SID]=1,this.spriteBuffer[e.SID]=RenderBuffer.Init(this.gl,3,0,2,40,60))}AddParticle(e){this.particles[this.particleCount]=e,this.particleCount++;let t=this.spriteCount[e.SID];t?(this.spriteCount[e.SID]=t+1,16*(t+2)>this.spriteBuffer[e.SID].vertices.length&&(this.spriteBuffer[e.SID]=RenderBuffer.Expand(this.gl,this.spriteBuffer[e.SID]))):(this.spriteCount[e.SID]=1,this.spriteBuffer[e.SID]=RenderBuffer.Init(this.gl,3,0,2,120,180))}RemoveThing(e){let t=this.thingCount;for(let i=0;i<t;i++)if(this.things[i]===e){this.things[i]=this.things[t-1],this.things[t-1]=null,this.thingCount--,this.spriteCount[e.SID]--,delete this.netLookup[e.NID];break}}RemoveItem(e){let t=this.itemCount;for(let i=0;i<t;i++)if(this.items[i]===e){this.items[i]=this.items[t-1],this.items[t-1]=null,this.itemCount--,this.spriteCount[e.SID]--,delete this.netLookup[e.NID];break}}RemoveMissile(e){let t=this.missileCount;for(let i=0;i<t;i++)if(this.missiles[i]===e){this.missiles[i]=this.missiles[t-1],this.missiles[t-1]=null,this.missileCount--,this.spriteCount[e.SID]--,delete this.netLookup[e.NID];break}}RemoveParticle(e){let t=this.particleCount;for(let i=0;i<t;i++)if(this.particles[i]===e){this.particles[i]=this.particles[t-1],this.particles[t-1]=null,this.particleCount--,this.spriteCount[e.SID]--;break}}update(){let e=this.thingCount;for(let t=0;t<e;t++)this.things[t].Update();e=this.missileCount;for(let t=0;t<e;t++)this.missiles[t].Update()&&(this.missiles[t]=this.missiles[e-1],this.missiles[e-1]=null,this.missileCount--,e--,t--);e=this.particleCount;for(let t=0;t<this.particleCount;t++)this.particles[t].Update()&&(this.particles[t]=this.particles[e-1],this.particles[e-1]=null,this.particleCount--,e--,t--)}render(e,t,i,s,r,o,n){let a=this.gl,l=this.spriteSet,h=this.spriteBuffer;this.occluder.prepare_frustum(e),this.occluder.occlude(this,t,i,s),l.clear();for(let e in h)h[e].Zero();e.set_program(a,"texcol3d"),e.update_mvp(a),e.set_texture(a,"tiles");for(let e=0;e<OCCLUSION_VIEW_NUM;e++){let _=this.viewable[e];_.RenderThings(l,h,r,o,n);let I=_.mesh;0!==I.vertex_pos&&(RenderSystem.BindVao(a,I),t==_.x?(RenderSystem.DrawRange(a,_.begin_side[WorldPositiveX],_.count_side[WorldPositiveX]),RenderSystem.DrawRange(a,_.begin_side[WorldNegativeX],_.count_side[WorldNegativeX])):t>_.x?RenderSystem.DrawRange(a,_.begin_side[WorldPositiveX],_.count_side[WorldPositiveX]):RenderSystem.DrawRange(a,_.begin_side[WorldNegativeX],_.count_side[WorldNegativeX]),i==_.y?(RenderSystem.DrawRange(a,_.begin_side[WorldPositiveY],_.count_side[WorldPositiveY]),RenderSystem.DrawRange(a,_.begin_side[WorldNegativeY],_.count_side[WorldNegativeY])):i>_.y?RenderSystem.DrawRange(a,_.begin_side[WorldPositiveY],_.count_side[WorldPositiveY]):RenderSystem.DrawRange(a,_.begin_side[WorldNegativeY],_.count_side[WorldNegativeY]),s==_.z?(RenderSystem.DrawRange(a,_.begin_side[WorldPositiveZ],_.count_side[WorldPositiveZ]),RenderSystem.DrawRange(a,_.begin_side[WorldNegativeZ],_.count_side[WorldNegativeZ])):s>_.z?RenderSystem.DrawRange(a,_.begin_side[WorldPositiveZ],_.count_side[WorldPositiveZ]):RenderSystem.DrawRange(a,_.begin_side[WorldNegativeZ],_.count_side[WorldNegativeZ]))}e.set_program(a,"texture3d"),e.update_mvp(a);for(let t in h){let i=h[t];i.vertex_pos>0&&(e.set_texture(a,t),RenderSystem.UpdateAndDraw(a,i))}}}class WorldState{constructor(e){this.app=e,this.snapshotTime=(new Date).getTime(),this.previousUpdate=(new Date).getTime()}update(){let e=this.app.world;if(SocketQueue.length>0){let t=SocketQueue[SocketQueue.length-1];SocketQueue=[];let i=new DataView(t),s=0,r=i.getUint32(s,!0);s+=4,this.snapshotTime=r+155233e7,this.previousUpdate=(new Date).getTime();let o=i.getUint8(s,!0);s+=1;for(let t=0;t<o;t++){let t=i.getUint8(s,!0);switch(s+=1,t){case BroadcastNew:{let t=i.getUint16(s,!0);s+=2;let r=i.getUint16(s,!0);if(s+=2,r in e.netLookup)break;let o=i.getFloat32(s,!0);s+=4;let n=i.getFloat32(s,!0);s+=4;let a=i.getFloat32(s,!0);if(s+=4,t===PlasmaUID){let t=i.getFloat32(s,!0);s+=4;let l=i.getFloat32(s,!0);s+=4;let h=i.getFloat32(s,!0);s+=4;let _=i.getUint16(s,!0);s+=2,new Plasma(e,r,_,o,n,a,t,l,h)}else{if(t!==HumanUID)throw new Error("missing new uid "+t);{let t=i.getFloat32(s,!0);s+=4;let l=i.getUint16(s,!0);s+=2;let h=i.getUint8(s,!0);s+=1,new Human(e,r,o,n,a,t,l,h)}}}break;case BroadcastDelete:{let t=i.getUint16(s,!0);s+=2;let r=e.netLookup[t];if(!r)throw new Error("missing nid "+t+" to delete");r.Cleanup()}}}let n=i.getUint16(s,!0);s+=2;for(let t=0;t<n;t++){let t=i.getUint16(s,!0);s+=2;let r=i.getUint8(s,!0);s+=1;let o=e.netLookup[t];if(!o)throw new Error("missing thing nid "+t);if(1&r&&(o.NetX=i.getFloat32(s,!0),o.DeltaNetX=(o.NetX-o.X)*InverseNetRate,s+=4,o.NetZ=i.getFloat32(s,!0),o.DeltaNetZ=(o.NetZ-o.Z)*InverseNetRate,s+=4),2&r&&(o.NetY=i.getFloat32(s,!0),o.DeltaNetY=(o.NetY-o.Y)*InverseNetRate,s+=4),4&r){let e=i.getUint16(s,!0);s+=2,o.NetUpdateHealth(e)}if(8&r){let e=i.getUint8(s,!0);s+=1,o.NetUpdateState(e)}switch(o.UID){case HumanUID:16&r&&(o.Angle=i.getFloat32(s,!0),s+=4);break;case BaronUID:if(16&r){let e=i.getUint8(s,!0);s+=1,e!==DirectionNone&&(o.Angle=DirectionToAngle[e])}}}}if(e.update(),SocketSendOperations>0){let e=SocketSend.buffer.slice(0,SocketSendIndex);new DataView(e).setUint8(0,SocketSendOperations,!0),SocketConnection.send(e),SocketSendIndex=1,SocketSendOperations=0}}render(){let e=this.app.g,t=this.app.gl,i=this.app.frame,s=this.app.canvas,r=this.app.canvasOrtho,o=this.app.drawPerspective,n=this.app.screen,a=this.app.world,l=this.app.camera;l.update(),RenderSystem.SetFrameBuffer(t,i.fbo),RenderSystem.SetView(t,0,0,i.width,i.height),t.clear(t.COLOR_BUFFER_BIT),t.clear(t.DEPTH_BUFFER_BIT),t.enable(t.DEPTH_TEST),t.enable(t.CULL_FACE),e.set_perspective(o,-l.x,-l.y,-l.z,l.rx,l.ry),Matrix.Inverse(e.iv,e.v);let h=Math.floor(l.x*InverseBlockSize),_=Math.floor(l.y*InverseBlockSize),I=Math.floor(l.z*InverseBlockSize);a.render(e,h,_,I,l.x,l.z,l.ry),t.disable(t.DEPTH_TEST),t.disable(t.CULL_FACE),RenderSystem.SetFrameBuffer(t,null),RenderSystem.SetView(t,0,0,s.width,s.height),e.set_program(t,"texture"),e.set_orthographic(r,0,0),e.update_mvp(t),e.set_texture_direct(t,i.textures[0]),RenderSystem.BindAndDraw(t,n)}}let SocketConnection=null,SocketQueue=[],SocketSend=new DataView(new ArrayBuffer(128)),SocketSendIndex=1,SocketSendOperations=0;class Application{constructor(){let e=document.createElement("canvas");e.style.display="block",e.style.position="absolute",e.style.left="0",e.style.right="0",e.style.top="0",e.style.bottom="0",e.style.margin="auto",e.width=window.innerWidth,e.height=window.innerHeight;let t=e.getContext("webgl2"),i=new RenderSystem;this.configure_opengl(t);let s=RenderBuffer.Init(t,2,0,2,4,6),r=RenderBuffer.Init(t,2,3,0,1600,2400),o=RenderBuffer.Init(t,2,0,2,400,600);this.on=!0,this.canvas=e,this.gl=t,this.g=i,this.screen=s,this.world=new World(i,t),this.frame=null,this.generics=r,this.generics2=o,this.camera=null,this.state=new WorldState(this),document.onkeyup=Input.KeyUp,document.onkeydown=Input.KeyDown,document.onmouseup=Input.MouseUp,document.onmousedown=Input.MouseDown,document.onmousemove=Input.MouseMove,window.onblur=function(){},window.onfocus=function(){}}configure_opengl(e){e.clearColor(0,0,0,1),e.depthFunc(e.LEQUAL),e.cullFace(e.BACK),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA),e.disable(e.CULL_FACE),e.disable(e.BLEND),e.disable(e.DEPTH_TEST)}resize(){let e=this.gl,t=this.canvas,i=this.screen;t.width=window.innerWidth,t.height=window.innerHeight;let s=[],r=[],o=[],n=1*t.width,a=1*t.height,l=n/a,h=2*Math.atan(Math.tan(Math.PI/180*60/2)/l)*(180/Math.PI);Matrix.Orthographic(s,0,t.width,0,t.height,0,1),Matrix.Orthographic(r,0,n,0,a,0,1),Matrix.Perspective(o,h,.01,100,l),null===this.frame?this.frame=FrameBuffer.Make(e,n,a,[e.RGB],[e.RGB],[e.UNSIGNED_BYTE],"nearest","depth"):FrameBuffer.Resize(e,this.frame,n,a),i.Zero(),Render.Image(i,0,0,t.width,t.height,0,1,1,0),RenderSystem.UpdateVao(e,i),this.canvasOrtho=s,this.drawOrtho=r,this.drawPerspective=o}async init(){let e=this,t=this.g,i=this.gl,s=await Network.Request("wad");await Wad.Load(t,i,s),(SocketConnection=await Network.Socket("ws://"+window.location.host+"/websocket")).binaryType="arraybuffer",SocketConnection.onclose=function(){throw SocketConnection=null,e.on=!1,new Error("Lost connection to server")};let r=await new Promise(function(e){SocketConnection.onmessage=function(t){e(t.data)}});SocketConnection.onmessage=function(e){SocketQueue.push(e.data)},this.world.Load(r),this.player=this.world.netLookup[this.world.PID],this.camera=new Camera(this.player,10,0,0),this.player.camera=this.camera,console.log(this.player)}async run(){await this.init();let e=this;window.onresize=function(){e.resize()},document.body.appendChild(this.canvas),this.resize(),this.loop()}switch(e){this.state=e}loop(){this.on&&(this.state.update(),this.state.render()),requestAnimationFrame(loop)}}let app=new Application;function loop(){app.loop()}function PlaySound(e){let t=Sounds[e];t.pause(),t.volume=.25,t.currentTime=0;let i=t.play();i&&i.then(e=>{}).catch(e=>{})}app.run();
